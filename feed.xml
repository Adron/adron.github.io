<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Adron's Composite Code</title>
    <atom:link href="http://adron.github.io/feed.xml" rel="self" type="application/rss+xml"></atom:link>
    <link>http://adron.github.io</link>
    <description>Coder, Messenger, Recon, Infrastructure, Ops</description>
    <pubDate>Fri, 08 Jul 2016 07:29:00 -0700</pubDate>
    <generator>Wintersmith - https://github.com/jnordberg/wintersmith</generator>
    <language>en</language>
    <item>
      <title>.NET Fringe Bike Ride</title>
      <link>http://adron.github.io/articles/Bike-Rides/</link>
      <pubDate>Fri, 08 Jul 2016 07:29:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/Bike-Rides/</guid>
      <author></author>
      <description>&lt;p&gt;In my &lt;strong&gt;&lt;em&gt;not so humble opinion&lt;/em&gt;&lt;/strong&gt; every conference should have a bike ride. But I realize it isn’t always possible. This is one of the ways conferences that Troy &amp;amp; I put on here in Portland are very different. We have a love for Portland; &lt;em&gt;the energy, the chill, vibrant yet relaxed, laid back, bike like, walking friendly city that it is&lt;/em&gt;. It’s a beautiful city that really can only be seen or felt by active transportation. If you walk, run, bike, skate board, dog sled, sled, cross country ski, or otherwise travel around Portland you get to actually see, feel, and hear this city. No other mode really works. Transit is fun, driving is like a cage, and with both you miss the vast majority of the life and blood of what makes Portland a great city!&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/Bike-Rides/nodepdx-bike-ride.jpg&quot; alt=&quot;Node PDX Bike Ride&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;-net-fringe-bike-ride&quot;&gt;.NET Fringe Bike Ride&lt;/h2&gt;
&lt;p&gt;With all that said, obviously we’re having a bike ride at .NET Fringe! I’ll be the lead, and give everybody a solid tour around some key parts of the city. I’ll show you all some odd things, weird stuff, probably some strange people, architecture and other elements and features of this place called Portland! Here’s the details:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Anybody can join the ride, even people that aren’t attending .NET Fringe. If we have 3 people ride or 500, it doesn’t matter, we’ll have a good roll about town.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;BYOB - Bring Your Own Bike AKA Bring Your Own Beer. For us, it means both. This might sound complicated, but I promise it’s not. There are a zillion places to rent a bike in about 20 seconds. Links below where to pick up a ride of your choice for the ride about the city.&lt;/li&gt;
&lt;li&gt;Show up at the designated location (also listed below) at the designated time (also listed below).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;That’s it!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I’ll summarize these simple steps to simply say “Just show up!” This isn’t a spandex crowd ride, this is a people chillin’ in Portland ride, so don’t worry nobody is getting left behind. We’ll enjoy some coffee, probably a beer, the city, and maybe a chat or three about the latest in tech, code patterns, and other miscellaneous hot topics like IoT not spamming your wifi and burning your muffins!&lt;/p&gt;
&lt;p&gt;Before renting a bike though, check out the options at the hotel you’re staying. Many if not most hotels in Portland have nice bikes that you can use for free. The Ace Hotel, Hotel Rose, and others all have a number that are freely available to guests of the hotel. &lt;/p&gt;
&lt;p&gt;So, in lieu of a bike access at hotel, home, friends, or otherwise, some great places to get bike rentals:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.waterfrontbikes.com/&quot;&gt;Waterfront Bike&lt;/a&gt; - Located on &lt;a href=&quot;https://www.google.com/maps/place/Waterfront+Bicycle/@45.522373,-122.6809235,15z/data=!4m8!1m2!2m1!1sbike+rentals!3m4!1s0x0:0xbed7f9780615f52d!8m2!3d45.5213399!4d-122.6709741&quot;&gt;10 SW Ash St #100, Portland, OR 97204&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.pedalbiketours.com/&quot;&gt;Pedal Bike Tours&lt;/a&gt; - Located on &lt;a href=&quot;https://www.google.com/maps/place/Pedal+Bike+Tours/@45.522373,-122.6809235,15z/data=!4m8!1m2!2m1!1sbike+rentals!3m4!1s0x0:0x6c1861d1ea8716e0!8m2!3d45.5216706!4d-122.672739&quot;&gt;133 SW 2nd Ave, Portland, OR 97204&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://portlandbicycletours.com/&quot;&gt;Cycle Portland Bike Tours &amp;amp; Rentals&lt;/a&gt; - Located on &lt;a href=&quot;https://www.google.com/maps/place/Cycle+Portland+Bike+Tours+%26+Rentals/@45.522373,-122.6809235,15z/data=!4m8!1m2!2m1!1sbike+rentals!3m4!1s0x0:0xed9ef696a5172958!8m2!3d45.5241437!4d-122.672562&quot;&gt;117 NW 2nd Ave, Portland, OR 97209&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We’ll meet at the waterfront here @ &lt;a href=&quot;https://www.google.com/maps/@45.5213697,-122.6699997,19.25z&quot;&gt;100 SW Naito Parkway&lt;/a&gt; and depart at 6:00pm on Sunday.&lt;/p&gt;
&lt;p&gt;The ride path is a secret (mostly because we’ll be JIT via dynamic path finding along the route). However, I can say it’ll be low car volume, easy paths, and minimal hills (Portland is mostly flat by Cascadian standards).&lt;/p&gt;
&lt;p&gt;See all of ya out there!&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Node PDX 2016 Photos</title>
      <link>http://adron.github.io/articles/Node-PDX-2016-Photos/</link>
      <pubDate>Wed, 29 Jun 2016 11:25:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/Node-PDX-2016-Photos/</guid>
      <author></author>
      <description>&lt;p&gt;Here’s a selection of photos from Node PDX. To check out all of the photos I’ve uploaded them on &lt;a href=&quot;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&quot;&gt;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Videos are available at &lt;a href=&quot;https://www.youtube.com/playlist?list=PLILnvQDgzULPSdF9Eppfl5MqQe0M3hhtx&quot;&gt;https://www.youtube.com/playlist?list=PLILnvQDgzULPSdF9Eppfl5MqQe0M3hhtx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&quot;&gt;&lt;img src=&quot;/articles/Node-PDX-2016-Photos/codes.jpg&quot; alt=&quot;Codes&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&quot;&gt;&lt;img src=&quot;/articles/Node-PDX-2016-Photos/liz.jpg&quot; alt=&quot;Liz&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&quot;&gt;&lt;img src=&quot;/articles/Node-PDX-2016-Photos/liz2.jpg&quot; alt=&quot;Liz&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&quot;&gt;&lt;img src=&quot;/articles/Node-PDX-2016-Photos/a1.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&quot;&gt;&lt;img src=&quot;/articles/Node-PDX-2016-Photos/azat4.jpg&quot; alt=&quot;Azat&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&quot;&gt;&lt;img src=&quot;/articles/Node-PDX-2016-Photos/b.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&quot;&gt;&lt;img src=&quot;/articles/Node-PDX-2016-Photos/computers.jpg&quot; alt=&quot;Computers&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&quot;&gt;&lt;img src=&quot;/articles/Node-PDX-2016-Photos/ben.jpg&quot; alt=&quot;Ben Michel&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&quot;&gt;&lt;img src=&quot;/articles/Node-PDX-2016-Photos/azat.jpg&quot; alt=&quot;Azat&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&quot;&gt;&lt;img src=&quot;/articles/Node-PDX-2016-Photos/chillin.jpg&quot; alt=&quot;Chillin&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&quot;&gt;&lt;img src=&quot;/articles/Node-PDX-2016-Photos/elastic.jpg&quot; alt=&quot;Elastic&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&quot;&gt;&lt;img src=&quot;/articles/Node-PDX-2016-Photos/hacking.jpg&quot; alt=&quot;Hacking&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&quot;&gt;&lt;img src=&quot;/articles/Node-PDX-2016-Photos/hardware-hacking.jpg&quot; alt=&quot;Hardware&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&quot;&gt;&lt;img src=&quot;/articles/Node-PDX-2016-Photos/hardware-hacking2.jpg&quot; alt=&quot;Hardware&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&quot;&gt;&lt;img src=&quot;/articles/Node-PDX-2016-Photos/j3.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&quot;&gt;&lt;img src=&quot;/articles/Node-PDX-2016-Photos/jacob.jpg&quot; alt=&quot;Jacob&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&quot;&gt;&lt;img src=&quot;/articles/Node-PDX-2016-Photos/james3.jpg&quot; alt=&quot;James&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&quot;&gt;&lt;img src=&quot;/articles/Node-PDX-2016-Photos/jamesh2.jpg&quot; alt=&quot;Jacob&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&quot;&gt;&lt;img src=&quot;/articles/Node-PDX-2016-Photos/ben1.jpg&quot; alt=&quot;Ben Michel&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&quot;&gt;&lt;img src=&quot;/articles/Node-PDX-2016-Photos/jon.jpg&quot; alt=&quot;Jon&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&quot;&gt;&lt;img src=&quot;/articles/Node-PDX-2016-Photos/jon2.jpg&quot; alt=&quot;Jon&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&quot;&gt;&lt;img src=&quot;/articles/Node-PDX-2016-Photos/ben-music.jpg&quot; alt=&quot;Ben Michel &amp;amp; Band&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&quot;&gt;&lt;img src=&quot;/articles/Node-PDX-2016-Photos/music.jpg&quot; alt=&quot;Music&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&quot;&gt;&lt;img src=&quot;/articles/Node-PDX-2016-Photos/music2.jpg&quot; alt=&quot;Music&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&quot;&gt;&lt;img src=&quot;/articles/Node-PDX-2016-Photos/music3.jpg&quot; alt=&quot;Music&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&quot;&gt;&lt;img src=&quot;/articles/Node-PDX-2016-Photos/matt.jpg&quot; alt=&quot;Matt&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&quot;&gt;&lt;img src=&quot;/articles/Node-PDX-2016-Photos/matt2.jpg&quot; alt=&quot;Matt&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&quot;&gt;&lt;img src=&quot;/articles/Node-PDX-2016-Photos/rethink.jpg&quot; alt=&quot;Rethink&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&quot;&gt;&lt;img src=&quot;/articles/Node-PDX-2016-Photos/reyes.jpg&quot; alt=&quot;Reyes&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&quot;&gt;&lt;img src=&quot;/articles/Node-PDX-2016-Photos/suchita.jpg&quot; alt=&quot;Suchita&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://photos.adron.me/Software/Meetups-N-Conferences/Conferences/Node-PDX-2016/&quot;&gt;&lt;img src=&quot;/articles/Node-PDX-2016-Photos/suchita1.jpg&quot; alt=&quot;Suchita&quot;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Node PDX 2016 Bike Ride, Photos, and More</title>
      <link>http://adron.github.io/articles/node-pdx-2016-bike-ride/</link>
      <pubDate>Wed, 29 Jun 2016 10:25:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-bike-ride/</guid>
      <author></author>
      <description>&lt;p&gt;Node PDX, at least for me, kicked off Saturday morning before the conference. This involved the Geek Train, which as always was a great ride. After returning everyone went off for the evening and I prepared more for the conference.&lt;/p&gt;
&lt;p&gt;The following day involved Sunday conference setup, workshops, and the Node PDX bike ride. Here’s a few photos of the ride and our break at Cup &amp;amp; Bar. In the next blog entry I’ll have more pictures &amp;amp; videos of the talks coming up.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/node-pdx-2016-bike-ride/nodepdx-bike-ride.jpg&quot; alt=&quot;Node PDX Bike Ride&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/node-pdx-2016-bike-ride/cup-and-bar.jpg&quot; alt=&quot;Cup and Bar&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/node-pdx-2016-bike-ride/cup-and-bar-1.jpg&quot; alt=&quot;Cup and Bar One&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/node-pdx-2016-bike-ride/cup-and-bar-bikes.jpg&quot; alt=&quot;Cup and Bar Bikes&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/node-pdx-2016-bike-ride/cup-and-bar-chats.jpg&quot; alt=&quot;Cup and Bar Chats&quot;&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>A Channel 9 Video on .NET Fringe 2016</title>
      <link>http://adron.github.io/articles/A-Channel-9-Video-on-dotNET-Fringe-2016/</link>
      <pubDate>Wed, 15 Jun 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/A-Channel-9-Video-on-dotNET-Fringe-2016/</guid>
      <author></author>
      <description>&lt;div class=&quot;image float-right&quot;&gt;
    &lt;img src=&quot;/articles/A-Channel-9-Video-on-dotNET-Fringe-2016/chan9logo.png&quot; alt=&quot;Channel 9 Logo&quot;&gt;
&lt;/div&gt;

&lt;p&gt;I was working on some code and related infrastructure configurations at &lt;a href=&quot;https://workfrom.co/albina-press&quot;&gt;Albina Press&lt;/a&gt; today. But took a short break to join &lt;a href=&quot;https://twitter.com/thoward37&quot;&gt;Troy Howard&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/&quot;&gt;Glenn Block&lt;/a&gt; to speak with &lt;a href=&quot;https://twitter.com/sethjuarez&quot;&gt;Seth Jaurez&lt;/a&gt; &lt;a href=&quot;https://twitter.com/Golnaz89&quot;&gt;Golnaz Alibeigi (even though she was hiding, she was there!&lt;/a&gt; to talk about &lt;a href=&quot;http://dotnetfringe.org/&quot;&gt;.NET Fringe&lt;/a&gt;.&lt;/p&gt;
&lt;iframe src=&quot;https://channel9.msdn.com/Events/NET-Fringe/NET-Fringe-2016/NET-Fringe-2016/player&quot; width=&quot;560&quot; height=&quot;315&quot; allowFullScreen frameBorder=&quot;0&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;For more info:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dotnetfringe.org/#speakers&quot;&gt;Speakers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dotnetfringe.org/#map&quot;&gt;Venue &amp;amp; Lodging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dotnetfringe.org/#lightningtalks&quot;&gt;Lightning Talks (submit one, still open)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dotnetfringe.org/#geektrain&quot;&gt;Geek Train&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dotnetfringe.org/#tickets&quot;&gt;Tickets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Node.js Patterns - From Callbacks to Observer by Azat Mardan</title>
      <link>http://adron.github.io/articles/node-pdx-2016-speaker-azat-mardan/</link>
      <pubDate>Tue, 14 Jun 2016 19:35:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-speaker-azat-mardan/</guid>
      <author></author>
      <description>&lt;div class=&quot;image float-right&quot;&gt;
    &lt;img src=&quot;/articles/node-pdx-2016-speaker-azat-mardan/azat.jpg&quot; alt=&quot;Azat Mardan&quot;&gt;
&lt;/div&gt;

&lt;p&gt;Introducing Azat Mardan!&lt;/p&gt;
&lt;p&gt;Azat is author of many JavaScript and Node.js best sellers including &lt;em&gt;Practical Node.js&lt;/em&gt;, &lt;em&gt;Pro Express.js&lt;/em&gt; and &lt;em&gt;Rapid Prototyping with JS&lt;/em&gt;. He works as a Technology Fellow at Capital One Financial Corporation where he provides expertise in software engineering.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;This presentation is for you, if you’re a JavaScript engineer who is interested in deepening your understanding of Node.js patterns so you can create and design Node.js applications intelligently. With the right pattern, applications will be more scalable and easier to maintain. If you aspire one day to become a Node.js architect (or maybe you’re already one and want to extend your knowledge), this presentation is for you.&lt;/p&gt;
&lt;p&gt;You will learn from this talk:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Starting with basic: what is event loop and callback: setTimeout(), setImmediate() and process.nextTick()&lt;/li&gt;
&lt;li&gt;The observer pattern with EventEmitter&lt;/li&gt;
&lt;li&gt;Middleware pattern&lt;/li&gt;
&lt;li&gt;Module patterns: module.exports et al&lt;/li&gt;
&lt;li&gt;Hacking object prototype and global refs&lt;/li&gt;
&lt;li&gt;Factory pattern and pseudo-classical inheritance&lt;/li&gt;
&lt;li&gt;Async patterns: Async, NeoAsync, async await, generators and Promises&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more work and links form Azat, check out these:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Blog: &lt;a href=&quot;http://webapplog.com&quot;&gt;http://webapplog.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Company: &lt;a href=&quot;http://capitalone.io&quot;&gt;http://capitalone.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github: &lt;a href=&quot;http://github.com/azat-co&quot;&gt;http://github.com/azat-co&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Books: &lt;a href=&quot;http://webapplog.com/books&quot;&gt;http://webapplog.com/books&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Other links: &lt;a href=&quot;http://azat.co&quot;&gt;http://azat.co&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Working With Google Compute Engine (GCE) using Terraform (With a load of Bash Scripts too)</title>
      <link>http://adron.github.io/articles/working-with-google-compute-engine/</link>
      <pubDate>Sun, 12 Jun 2016 15:54:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/working-with-google-compute-engine/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;strong&gt;Mission:&lt;/strong&gt; I wanted to setup an instance, that I could install various things on and prepare it to act as a Terraformer or central server within GCE to spawn instances, setup networks, and generally manage the network autonomously of any local scripts or junk I have on my local computer. To set this up, I would of course have to launch it from my local computer, so there’s a whole range of things I’d need to have execute. To accomplish this, here’s what I did.&lt;/p&gt;
&lt;h2 id=&quot;first-steps-google-compute-engine&quot;&gt;First Steps: Google Compute Engine&lt;/h2&gt;
&lt;p&gt;First I logged in and setup a GCE Account (&lt;a href=&quot;https://cloud.google.com/compute/docs/quickstart&quot;&gt;read specifically about creating and getting started with a GCE account&lt;/a&gt;) and got &lt;em&gt;gcloud&lt;/em&gt; configured. The &lt;em&gt;gcloud&lt;/em&gt; is a cli to manage GCE. It’s actually a super powerful tool that comes in handy for all sorts of things. Besides managing GCE, it has a thin wrapper around &lt;a href=&quot;https://en.wikipedia.org/wiki/Secure_Shell&quot; target=&quot;_blank&quot;&gt;ssh&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Secure_copy&quot; target=&quot;_blank&quot;&gt;scp&lt;/a&gt;, and working with servers with those respective tools. I’ll use it a bit later to actually run some scripts against the instance I’ll be creating.&lt;/p&gt;
&lt;p&gt;Once you’ve signed up for GCE there’s a few things worth noting. One is the idea of the &lt;em&gt;project&lt;/em&gt; that Google uses within GCE. This is something you’re create, or rename the default, or in some way bring into existence to use. A &lt;em&gt;project&lt;/em&gt; is something that a host of instances, instance groups, load balancers, networks, networking, and more can be allocated against. It’s also something that can be setup for or inside a specific billing group. It might also be helpful to really get an understanding of what a &lt;em&gt;project&lt;/em&gt; is by reading the &lt;a href=&quot;https://cloud.google.com/compute/docs/projects&quot; target=&quot;_blank&quot;&gt;Google documentation on &lt;em&gt;projects&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Once the project is ready, we can move forward with installing &lt;em&gt;gcloud&lt;/em&gt;. The way this is done is by installing the Google Cloud SDK. The curl below pulls down and executes the installation. Then the following command restarts the shell. Finally the gcloud init command kicks off the initialization of the gcloud cli.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl https://sdk.cloud.google.com | bash
exec -l $SHELL
gcloud init
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Running gcloud init does several things.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Authenticates the user (or allows re-use of saved credentials).&lt;/li&gt;
&lt;li&gt;Requests the user’s project &amp;amp; saves it in the gcloud configuration.&lt;/li&gt;
&lt;li&gt;Requests and sets a default zone based on the project in the gcloud configuration.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At this point gcloud is setup for use, however upon connecting for the first time to an instance, gcloud will prompt to create a new ssh key set. This key set will be created and autonomous of the key set I have setup for git or other cli ssh tooling I’ll use. I’ll talk more about that later. NOTE: It is very important for subsequent steps to insure the gcloud ssh key is generated. I’ll get around to that in a moment under the “&lt;a href=&quot;#gcloudterraform&quot;&gt;&lt;em&gt;User gcloud w/ Terraform&lt;/em&gt;&lt;/a&gt;“ section.&lt;/p&gt;
&lt;p&gt;The specific instructions for setting up &lt;em&gt;gcloud&lt;/em&gt; are also available here in &lt;a href=&quot;https://cloud.google.com/sdk/&quot;&gt;getting started with the Google Cloud SDK&lt;/a&gt;. This includes a little more description of what is included and related information about the Google Cloud SDK.&lt;/p&gt;
&lt;h3 id=&quot;gcloudterraform&quot;&gt;Using gcloud w/ Terraform&lt;/h3&gt;

&lt;p&gt;When building Terraform configurations for Google Cloud there are a number of settings that &lt;em&gt;gcloud&lt;/em&gt; can pull up very easily. Here are some of the commands I’ve used most frequently when setting up google compute instances.&lt;/p&gt;
&lt;p&gt;List machine types in a project in table.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gcloud compute machine-types list
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;List the URIs of all machine types in a project.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gcloud compute machine-types list --uri
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;List all machine types in the us-central1-b and europe-west1-d zones.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gcloud compute machine-types list --zones us-central1-b europe-west1-d
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;List all images in a project in table.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gcloud compute images list
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;List all the URI images in a project.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gcloud compute images list --uri
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The last thing is connecting to instances, with &lt;em&gt;gcloud&lt;/em&gt; looks like the following.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gcloud compute --project &amp;quot;project-name&amp;quot; ssh --zone &amp;quot;us-central1-b&amp;quot; &amp;quot;instance-name&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;There’s some super useful ways to execute commands with the &lt;em&gt;gcloud&lt;/em&gt; cli, which provides a great way for bash scripting against instances.&lt;/p&gt;
&lt;p&gt;These all provide quick ways to get the specific GCE specific settings for the Terraform file. Which brings up a perfect point to get into a basic Terraform instance creation.&lt;/p&gt;
&lt;h2 id=&quot;next-terraforming-with-terraform&quot;&gt;Next: Terraforming with Terraform&lt;/h2&gt;
&lt;p&gt;If you don’t have &lt;a href=&quot;https://www.terraform.io/&quot; target=&quot;_blank&quot;&gt;Terraform&lt;/a&gt; installed, the following bash commands will get you all setup on your machine. With this script below I can wrap this up as an installation script for the instance further along in this how-to. We’ll just have to tweak it specifically for Linux, as this script is focused around downloading and installing the Darwin (OS-X) version.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd /home/adron

# Create a move into directory.
mkdir terraform_0_6_14
cd terraform_0_6_14

# Download.
curl -O https://releases.hashicorp.com/terraform/0.6.14/terraform_0.6.14_darwin_amd64.zip
# Unzip and install
unzip terraform_0.6.14_darwin_amd64.zip

export PATH=/home/terraform_0_6_14:$PATH
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;To confirm that Terraform is installed correctly, just type terraform. The following should be displayed, which will let you know that the path variable is set to the correct path.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ terraform
usage: terraform [--version] [--help] &amp;lt;command&amp;gt; [&amp;lt;args&amp;gt;]

Available commands are:
    apply       Builds or changes infrastructure
    destroy     Destroy Terraform-managed infrastructure
    get         Download and install modules for the configuration
    graph       Create a visual graph of Terraform resources
    init        Initializes Terraform configuration from a module
    output      Read an output from a state file
    plan        Generate and show an execution plan
    push        Upload this Terraform module to Atlas to run
    refresh     Update local state file against real resources
    remote      Configure remote state storage
    show        Inspect Terraform state or plan
    taint       Manually mark a resource for recreation
    untaint     Manually unmark a resource as tainted
    validate    Validates the Terraform files
    version     Prints the Terraform version
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You may also want to add the PATH to the ~/.bash_profile on your own OS-X machine, like I did. Instead of that last bit of script that just exports the PATH variable, I swapped it out with the following code.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo &amp;quot;
export PATH=/home/terraform_0_6_14:$PATH
&amp;quot; &amp;gt;&amp;gt; ~/.bash_profile
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Yes, the odd spacing and new lines are important, because that will append the export to PATH in a way that provides space before and below the line. It just leaves the ~/.bash_profile file looking a little cleaner.&lt;/p&gt;
&lt;p&gt;Once you’ve added it to your ~/.bash_profile, remember to either restart the terminal or source the file to get the PATH variable updated.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;source ~/.bash_profile
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The next thing we’ll need for Terraform use with GCE is the &lt;em&gt;account.json&lt;/em&gt; file. This is the file that a service account sets up to secure our connection between GCE and Terraform.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/working-with-google-compute-engine/user_accountjson_001.png&quot; alt=&quot;Account JSON Permissions&quot;&gt;&lt;/p&gt;
&lt;p&gt;Navigate to the Permissions section of the GCE interface and add a service account. When you click to create a service account you’ll be prompted with the following.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/working-with-google-compute-engine/user_accountjson_002.png&quot; alt=&quot;Furnish Account JSON&quot;&gt;&lt;/p&gt;
&lt;p&gt;Here check the “Furnish a new private key” and click on the JSON for the key type. Then create create. This will create the service account and the key will download locally. The key is not named account.json, but the file downloaded is what to use as the account.json file, it just needs renamed.&lt;/p&gt;
&lt;p&gt;Now we’re ready to get into actually putting together an infrastructure project. Let’s start with a basic setup. First I need the following files.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;account.json&lt;/li&gt;
&lt;li&gt;theterraformfile.tf&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These are needed files and will get a terraform workflow started, but I break them out a bit more. Terraform files after all are all collected and then processed, so the configuration doesn’t have to all be in a single file.&lt;/p&gt;
&lt;p&gt;What I have been doing lately, is take the terraform file and break it out accordingly. For the connection I create a connection.tf file, for configuration around instances I create an instances.tf file, for network addresses (static IPs) that goes in an addresses.tf file. If any of those files get to big within a project I break those out further like instance-instancename1.tf and instance-instancename2.tf.&lt;/p&gt;
&lt;p&gt;With that practice applied, I end up with a project with the following files.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;account.json&lt;/li&gt;
&lt;li&gt;instances.tf&lt;/li&gt;
&lt;li&gt;addresses.tf&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I then run git init and add two more files.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;.gitignore&lt;/li&gt;
&lt;li&gt;README.md&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These have no relevance to the actual Terraform files, but they’re standard practice and come in very helpful once the project starts to grow. You’ll want a README.md for notes and documentation and you’ll definitely want to keep trash out of the project with the .gitignore, so even though they’re not required right now, if you’re following along add the files.&lt;/p&gt;
&lt;p&gt;In the &lt;a href=&quot;https://github.com/Adron/starting-with-gce/blob/master/README.md&quot; target=&quot;_blank&quot;&gt;README.md&lt;/a&gt;, of course, we write our documentation! So anyway, it’ll be there in the &lt;a href=&quot;https://github.com/Adron/starting-with-gce&quot; target=&quot;_blank&quot;&gt;repo&lt;/a&gt; I’ve created for this blog entry here.&lt;/p&gt;
&lt;p&gt;In the .gitignore file add the following.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;.DS_Store
account.json
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In the connection.tf file I added the following connection information. The ${file(“../secrets/account.json”)} configuration interpolates the path of the file based on where the project is located and pulls in the appropriate values for GCE.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Configure the Google Cloud provider
provider &amp;quot;google&amp;quot; {
  credentials = &amp;quot;${file(&amp;quot;account.json&amp;quot;)}&amp;quot;
  project     = &amp;quot;that-big-universe&amp;quot;
  region      = &amp;quot;us-central1&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;With that in place, I added this to the instances.tf file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Create a new instance
resource &amp;quot;google_compute_instance&amp;quot; &amp;quot;flirpderp&amp;quot; {
    name = &amp;quot;flirpderp&amp;quot;
    machine_type = &amp;quot;f1-micro&amp;quot;

    zone = &amp;quot;us-central1-b&amp;quot;

    disk {
        image = &amp;quot;ubuntu-1404-trusty-v20160406&amp;quot;
    }

    network_interface {
        network = &amp;quot;default&amp;quot;
        access_config {}
    }

    service_account {
        scopes = [&amp;quot;userinfo-email&amp;quot;, &amp;quot;compute-ro&amp;quot;, &amp;quot;storage-ro&amp;quot;]
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;To get the machine_type and disk image above I just used the following gcloud commands.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gcloud compute machine-types list
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gcloud compute images list
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;For this first build, I just wanted to get a basic template with a small (and by association super cheap) instance. For this I went with &lt;em&gt;f1-micro&lt;/em&gt;. For the disk, I used the base disk image load of the &lt;em&gt;ubuntu-1404-trusty-v20160406&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;All configuration set, I opened up a bash terminal and typed in the following.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;terraform plan
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This command then displayed the following result.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Refreshing Terraform state prior to plan...

The Terraform execution plan has been generated and is shown below.
Resources are shown in alphabetical order for quick scanning. Green resources
will be created (or destroyed and then created if an existing resource
exists), yellow resources are being changed in-place, and red resources
will be destroyed.

Note: You didn&amp;#39;t specify an &amp;quot;-out&amp;quot; parameter to save this plan, so when
&amp;quot;apply&amp;quot; is called, Terraform can&amp;#39;t guarantee this is what will execute.

+ google_compute_instance.flirpderp
    can_ip_forward:                                      &amp;quot;&amp;quot; =&amp;gt; &amp;quot;0&amp;quot;
    disk.#:                                              &amp;quot;&amp;quot; =&amp;gt; &amp;quot;1&amp;quot;
    disk.0.auto_delete:                                  &amp;quot;&amp;quot; =&amp;gt; &amp;quot;1&amp;quot;
    disk.0.image:                                        &amp;quot;&amp;quot; =&amp;gt; &amp;quot;ubuntu-1404-trusty-v20160406&amp;quot;
    machine_type:                                        &amp;quot;&amp;quot; =&amp;gt; &amp;quot;f1-micro&amp;quot;
    metadata_fingerprint:                                &amp;quot;&amp;quot; =&amp;gt; &amp;quot;&amp;lt;computed&amp;gt;&amp;quot;
    name:                                                &amp;quot;&amp;quot; =&amp;gt; &amp;quot;flirpderp&amp;quot;
    network_interface.#:                                 &amp;quot;&amp;quot; =&amp;gt; &amp;quot;1&amp;quot;
    network_interface.0.access_config.#:                 &amp;quot;&amp;quot; =&amp;gt; &amp;quot;1&amp;quot;
    network_interface.0.access_config.0.assigned_nat_ip: &amp;quot;&amp;quot; =&amp;gt; &amp;quot;&amp;lt;computed&amp;gt;&amp;quot;
    network_interface.0.address:                         &amp;quot;&amp;quot; =&amp;gt; &amp;quot;&amp;lt;computed&amp;gt;&amp;quot;
    network_interface.0.name:                            &amp;quot;&amp;quot; =&amp;gt; &amp;quot;&amp;lt;computed&amp;gt;&amp;quot;
    network_interface.0.network:                         &amp;quot;&amp;quot; =&amp;gt; &amp;quot;default&amp;quot;
    self_link:                                           &amp;quot;&amp;quot; =&amp;gt; &amp;quot;&amp;lt;computed&amp;gt;&amp;quot;
    service_account.#:                                   &amp;quot;&amp;quot; =&amp;gt; &amp;quot;1&amp;quot;
    service_account.0.email:                             &amp;quot;&amp;quot; =&amp;gt; &amp;quot;&amp;lt;computed&amp;gt;&amp;quot;
    service_account.0.scopes.#:                          &amp;quot;&amp;quot; =&amp;gt; &amp;quot;3&amp;quot;
    service_account.0.scopes.1632638332:                 &amp;quot;&amp;quot; =&amp;gt; &amp;quot;https://www.googleapis.com/auth/devstorage.read_only&amp;quot;
    service_account.0.scopes.2428168921:                 &amp;quot;&amp;quot; =&amp;gt; &amp;quot;https://www.googleapis.com/auth/userinfo.email&amp;quot;
    service_account.0.scopes.2862113455:                 &amp;quot;&amp;quot; =&amp;gt; &amp;quot;https://www.googleapis.com/auth/compute.readonly&amp;quot;
    tags_fingerprint:                                    &amp;quot;&amp;quot; =&amp;gt; &amp;quot;&amp;lt;computed&amp;gt;&amp;quot;
    zone:                                                &amp;quot;&amp;quot; =&amp;gt; &amp;quot;us-central1-b&amp;quot;

Plan: 1 to add, 0 to change, 0 to destroy.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Let’s walk through this result to get an idea of what just happened. Terraform has taken all of the Terraform files, which currently is only one file with actual configuration in it, and processed them to create a plan of changes. At the very bottom of the results the line “Plan: 1 to add, 0 to change, 0 to destroy.” simple shows what will occur if I were to apply these changes. Many of the values are also set as which simply means that when processed they’ll be calculated and set. Otherwise most of the other values are simply the settings I’ve put in via the actual Terraform configuration files.&lt;/p&gt;
&lt;p&gt;Now I applied the configuration.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;terraform apply
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The output of this command will display as shown.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;google_compute_instance.flirpderp: Creating...
  can_ip_forward:                                      &amp;quot;&amp;quot; =&amp;gt; &amp;quot;0&amp;quot;
  disk.#:                                              &amp;quot;&amp;quot; =&amp;gt; &amp;quot;1&amp;quot;
  disk.0.auto_delete:                                  &amp;quot;&amp;quot; =&amp;gt; &amp;quot;1&amp;quot;
  disk.0.image:                                        &amp;quot;&amp;quot; =&amp;gt; &amp;quot;ubuntu-1404-trusty-v20160406&amp;quot;
  machine_type:                                        &amp;quot;&amp;quot; =&amp;gt; &amp;quot;f1-micro&amp;quot;
  metadata_fingerprint:                                &amp;quot;&amp;quot; =&amp;gt; &amp;quot;&amp;lt;computed&amp;gt;&amp;quot;
  name:                                                &amp;quot;&amp;quot; =&amp;gt; &amp;quot;flirpderp&amp;quot;
  network_interface.#:                                 &amp;quot;&amp;quot; =&amp;gt; &amp;quot;1&amp;quot;
  network_interface.0.access_config.#:                 &amp;quot;&amp;quot; =&amp;gt; &amp;quot;1&amp;quot;
  network_interface.0.access_config.0.assigned_nat_ip: &amp;quot;&amp;quot; =&amp;gt; &amp;quot;&amp;lt;computed&amp;gt;&amp;quot;
  network_interface.0.address:                         &amp;quot;&amp;quot; =&amp;gt; &amp;quot;&amp;lt;computed&amp;gt;&amp;quot;
  network_interface.0.name:                            &amp;quot;&amp;quot; =&amp;gt; &amp;quot;&amp;lt;computed&amp;gt;&amp;quot;
  network_interface.0.network:                         &amp;quot;&amp;quot; =&amp;gt; &amp;quot;default&amp;quot;
  self_link:                                           &amp;quot;&amp;quot; =&amp;gt; &amp;quot;&amp;lt;computed&amp;gt;&amp;quot;
  service_account.#:                                   &amp;quot;&amp;quot; =&amp;gt; &amp;quot;1&amp;quot;
  service_account.0.email:                             &amp;quot;&amp;quot; =&amp;gt; &amp;quot;&amp;lt;computed&amp;gt;&amp;quot;
  service_account.0.scopes.#:                          &amp;quot;&amp;quot; =&amp;gt; &amp;quot;3&amp;quot;
  service_account.0.scopes.1632638332:                 &amp;quot;&amp;quot; =&amp;gt; &amp;quot;https://www.googleapis.com/auth/devstorage.read_only&amp;quot;
  service_account.0.scopes.2428168921:                 &amp;quot;&amp;quot; =&amp;gt; &amp;quot;https://www.googleapis.com/auth/userinfo.email&amp;quot;
  service_account.0.scopes.2862113455:                 &amp;quot;&amp;quot; =&amp;gt; &amp;quot;https://www.googleapis.com/auth/compute.readonly&amp;quot;
  tags_fingerprint:                                    &amp;quot;&amp;quot; =&amp;gt; &amp;quot;&amp;lt;computed&amp;gt;&amp;quot;
  zone:                                                &amp;quot;&amp;quot; =&amp;gt; &amp;quot;us-central1-b&amp;quot;
google_compute_instance.flirpderp: Creation complete

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

The state of your infrastructure has been saved to the path
below. This state is required to modify and destroy your
infrastructure, so keep it safe. To inspect the complete state
use the `terraform show` command.

State path: terraform.tfstate
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I logged in at this point to verify the creation of the instance.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/working-with-google-compute-engine/flirpderp.png&quot; alt=&quot;Google Cloud Interface&quot;&gt;&lt;/p&gt;
&lt;p&gt;In the interface the instance (or instances if I have multiple) shows up in a list underneath the fancy CPU utilization chart.&lt;/p&gt;
&lt;h3 id=&quot;cleanup&quot;&gt;Cleanup&lt;/h3&gt;
&lt;p&gt;Since I don’t actually want this instance to stay live currently, to destroy the instance I can use the terraform destroy command. If there were other instances in this set of Terraform configuraiton files, it would also destroy those too. Destroy, suffice to say is something that is very destructive and should be used carefully. For this example I’m going to destroy this instance now, but since I have the configuration I’ll add a little bit more to it and recreate it shortly.&lt;/p&gt;
&lt;p&gt;I issue this command.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;terraform destroy
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This displays…&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Do you really want to destroy?
  Terraform will delete all your managed infrastructure.
  There is no undo. Only &amp;#39;yes&amp;#39; will be accepted to confirm.

  Enter a value: yes
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then I confirm by typing ‘yes’ and then the following result of this acction is returned.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;google_compute_instance.flirpderp: Refreshing state... (ID: flirpderp)
google_compute_instance.flirpderp: Destroying...
google_compute_instance.flirpderp: Destruction complete

Apply complete! Resources: 0 added, 0 changed, 1 destroyed.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;At this point, it’s pretty cool that I can build a single instance, but that’s of extremely limited use if I can’t get it deployed out into GCE in a usable state. The most common ways I’d want to wrap up configuration and installation of software on an instance is to issue some bash commands to the instance. Well, Terraform has ways that exactly that can be done. I’ll cover that in the follow up to this article.&lt;/p&gt;
&lt;h3 id=&quot;references-&quot;&gt;References:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Adron/starting-with-gce/tree/blog-entry-01&quot;&gt;The Github Repository branch for this blog entry.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Startup Things - How Ya Linux Series - 0000</title>
      <link>http://adron.github.io/articles/how-ya-linux-0000-Startup-things/</link>
      <pubDate>Sat, 11 Jun 2016 15:35:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/how-ya-linux-0000-Startup-things/</guid>
      <author></author>
      <description>&lt;div class=&quot;image float-right&quot;&gt;
    &lt;img src=&quot;/articles/how-ya-linux-0000-Startup-things/penguinbash.jpg&quot; alt=&quot;Penguin Bash&quot;&gt;
&lt;/div&gt;

&lt;p&gt;When Linux starts up (or most Unix variants or OS-X for that matter, which is after all a kind of Unix variant) there are particular scrips that execute. The key two are ~/.bash_profile and ~./bashrc. When you log in the ~/.bash_profile executes and when you startup a shell then the ~/.bashrc executes.&lt;/p&gt;
&lt;p&gt;These two files are standard executable script files, so any bash will do. For instance, some of the bash script I end up in my ~/.bash_profile includes a git prompt, as shown below.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;if [ -f &amp;quot;$(brew --prefix)/opt/bash-git-prompt/share/gitprompt.sh&amp;quot; ]; then
    source &amp;quot;$(brew --prefix)/opt/bash-git-prompt/share/gitprompt.sh&amp;quot;
fi
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Another few lines of code actually load my nvm, which is my Node.js Version Manager.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export NVM_DIR=&amp;quot;/Users/axh6454/.nvm&amp;quot;
[ -s &amp;quot;$NVM_DIR/nvm.sh&amp;quot; ] &amp;amp;&amp;amp; . &amp;quot;$NVM_DIR/nvm.sh&amp;quot;  # This loads nvm
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I also have a few functions I’ve created, that load and are ready for my use at  any location I open the terminal at.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gimmedocker() { if [ $1 ]; then
    docker-machine start $1
    docker-machine env $1
    eval $(docker-machine env $1)
    docker ps -a
fi };

cleandocker() {
    # Wipe out the images and containers.
    docker rm $(docker ps -a -q)
    docker rmi $(docker images -q)
};
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The first function executes simply by entering &lt;code&gt;gimme docker nameOfDockerVirtualMachineImage&lt;/code&gt;. It then checks for the virtual machine image parameter (the $1) and then executes various docker-machine commands against that image. Then ends with the evaluation and execution of the docker machine terminal connection.&lt;/p&gt;
&lt;p&gt;The second function deletes my docker containers and then deletes my images. This way I can start fresh without deleting an entire docker virtual machine (sometimes the later may actually be easier). It’s a quick way to start fresh with docker images and containers when working through a lot of minor changes.&lt;/p&gt;
&lt;p&gt;The last thing I’ll cover real quick that is commonly located in these startup scripts are some environment variables being set. For instance, I use Terraform to build out infrastructure. For that, sometimes I setup some Terraform variables, that are built to work specifically when prefaced with TF&lt;em&gt;VAR&lt;/em&gt;. So my variables look something like this when set in script.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export TF_VAR_username=&amp;quot;root&amp;quot;
export TF_VAR_password=&amp;quot;someSecretPassword&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;So that’s some examples and the basic gist of things you might see, and what you might want to run with your ~/.bash_profile or ~/.bashrc files. Happy bash hacking!&lt;/p&gt;
</description>
    </item>
    <item>
      <title>The Short Story of Node PDX, and Node PDX 2016</title>
      <link>http://adron.github.io/articles/node-pdx-2016/</link>
      <pubDate>Wed, 08 Jun 2016 14:30:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016/</guid>
      <author></author>
      <description>&lt;p&gt;Some of you may know the story, but I’ll tell it again for those that don’t. In 2012 Troy Howard (&lt;a href=&quot;https://twitter.com/thoward37&quot;&gt;@thoward37&lt;/a&gt;) and I were sitting at the Side Door hacking on some project code. We started talking about where and what was up with the Node.js project, community, and asking ourselves what the future of that was. You see, we’d toyed about with the technology here and there but we hadn’t really done anything with it.&lt;/p&gt;
&lt;p&gt;We continued our coding, enjoying a tasty locally brewed beer, frothy and good. After a reasonable amount of said tasty beer, we started discussing a way to get up to speed faster on Node.js. In our infinitely wise and slightly intoxicated minds we both thought, “Hey, let’s throw a conference!”. We immediately started discussing this idea and a number of decisions were made…&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;inception-by-conversation&quot;&gt;Inception by Conversation&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Adron&lt;/em&gt;&lt;/strong&gt; “Oh man, we should do exactly that, let’s have a conference! It’ll be super easy to ramp up if we just get a bunch of smart Node.js people together.”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Troy&lt;/em&gt;&lt;/strong&gt; “Yeah, and it’d be a total blast. There are a number of smart people working in this space.”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Adron&lt;/em&gt;&lt;/strong&gt; “Let’s!”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Troy&lt;/em&gt;&lt;/strong&gt; “Yes.”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Adron&lt;/em&gt;&lt;/strong&gt; “Cheers!”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Troy&lt;/em&gt;&lt;/strong&gt; “Cheers!”&lt;/p&gt;
&lt;p&gt;Beer drinking. So there we sat, and we began, the dilligent decision making at what was obviously the perfect time to make decisions about a conference!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Adron&lt;/em&gt;&lt;/strong&gt; “Have you ever organized anything like this before?”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Troy&lt;/em&gt;&lt;/strong&gt; “Naw. You?”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Adron&lt;/em&gt;&lt;/strong&gt; “Ummm, nope.”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Troy&lt;/em&gt;&lt;/strong&gt; “What seems like a reasonable timespan to get this put together?”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Adron&lt;/em&gt;&lt;/strong&gt; … sip, sip, sip, big drink. “Hmmm, I don’t know, 4 or 5 weeks, maybe 4?”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Troy&lt;/em&gt;&lt;/strong&gt; “Meh, sounds good.”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Adron&lt;/em&gt;&lt;/strong&gt; “Cool, so we’ll have it in about 5 weeks.”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Troy&lt;/em&gt;&lt;/strong&gt; “Yup.”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Adron&lt;/em&gt;&lt;/strong&gt; “How many days, speakers and such?”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;strong&gt;Troy&lt;/strong&gt;&lt;/strong&gt; “Let’s go for two days and we’ll just do one track.”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Adron&lt;/em&gt;&lt;/strong&gt; “Done and done.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;(Ok, it might have been slightly different, but this is the gist of it.)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In that moment of infinite wisdom we began the journey to create and organize our first conference. It thoroughly kicked our ass but was super fun.&lt;/p&gt;
&lt;div class=&quot;image float-right&quot;&gt;
    &lt;img src=&quot;/articles/node-pdx-2016/nodepdx-logo-2012.png&quot; alt=&quot;Node PDX 2012&quot;&gt;
&lt;/div&gt;

&lt;p&gt;We also learned some very key things.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Organizing an inclusive conference is both easy and ridiculously stressful and difficult.&lt;/li&gt;
&lt;li&gt;Organizing a conference with 4-5 weeks before the date is batshit insane.&lt;/li&gt;
&lt;li&gt;Making decisions about organizing something one has never organized is probably not the best thing to do after coding for hours on end and maybe one to many beers.&lt;/li&gt;
&lt;li&gt;Community focused and grassroots organized conferences are really fun and arguably more educational than that corporate shit shill.&lt;/li&gt;
&lt;li&gt;Organizing volunteers and speakers is not actually easy at all.&lt;/li&gt;
&lt;li&gt;Non-profit incoroporation, actually any type of corporation is very poorly organized for this type of event. Either way, it adds a financial burden just for undertaking such an enterprise.&lt;/li&gt;
&lt;li&gt;One can actually learn a lot at a conference, but the people contacts are vastly more important.&lt;/li&gt;
&lt;li&gt;One can actually not learn a whole lot if actually organizing the conference, yet this first year we managed to do both learning and connecting with many of the great attendees of the conference.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;image float-left&quot;&gt;
    &lt;img src=&quot;/articles/node-pdx-2016/NodePDX-2012-site.png&quot; alt=&quot;Node PDX 2012 Site&quot;&gt;
&lt;/div&gt;

&lt;p&gt;So this basically summarizes year one of Node PDX. That was &lt;a href=&quot;http://2012.nodepdx.org/&quot;&gt;Node PDX 2012&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;node-pdx-2013&quot;&gt;Node PDX 2013&lt;/h2&gt;
&lt;p&gt;Node PDX 2013 started off a bit differently. We gave ourselves more runway to work with. I believe initially it was at least several months. We also gave ourselves plenty of resources to work with and incorporated anyway, which still is a complete discouragement from actually doing these things.&lt;/p&gt;
&lt;p&gt;Troy also did effectively all of the graphic design, which I might add, turned out pretty rad! Check it out for a trip down memory lane at the &lt;a href=&quot;http://2013.nodepdx.org/&quot;&gt;archive site&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;image float-right&quot;&gt;
    &lt;img src=&quot;/articles/node-pdx-2016/NodePDX-2013.png&quot; alt=&quot;Node PDX 2013&quot;&gt;
&lt;/div&gt;

&lt;p&gt;We got the ball rolling and Node PDX 2013 was a huge hit. We had involvement from all sorts of sponsors from great companies like &lt;a href=&quot;https://newrelic.com/&quot;&gt;New Relic&lt;/a&gt;, &lt;a href=&quot;https://www.urbanairship.com/&quot;&gt;Urban Airship&lt;/a&gt;, &lt;a href=&quot;https://liftsecurity.io/&quot;&gt;^lift&lt;/a&gt;, &lt;a href=&quot;https://www.mozilla.org/en-US/&quot;&gt;Mozilla&lt;/a&gt;, &lt;a href=&quot;https://www.jivesoftware.com/&quot;&gt;Jive&lt;/a&gt;, &lt;a href=&quot;http://www.janrain.com/&quot;&gt;Janrain&lt;/a&gt;, &lt;a href=&quot;http://www.walmartlabs.com/&quot;&gt;Walmart Labs&lt;/a&gt;, &lt;a href=&quot;http://www.piepdx.com/&quot;&gt;PIE PDX&lt;/a&gt;, &lt;a href=&quot;http://basho.com/&quot;&gt;Basho&lt;/a&gt;, &lt;a href=&quot;https://www.stickermule.com/&quot;&gt;Sticker Mule&lt;/a&gt;, &lt;a href=&quot;http://siliconflorist.com/&quot;&gt;Silicon Florist&lt;/a&gt;, and &lt;a href=&quot;http://devion.com/&quot;&gt;Devion&lt;/a&gt;. We also had a great speaker line up, had excellent local food, great freshly brewed &amp;amp; roasted coffee, and lots more. I even got hit in the head with a quad-copter! It was absolutely a superb time. &lt;/p&gt;
&lt;div class=&quot;image float-right&quot;&gt;
    &lt;img src=&quot;/articles/node-pdx-2016/burnout.jpg&quot; alt=&quot;Conference Burnout&quot;&gt;
&lt;/div&gt;

&lt;h2 id=&quot;conference-burnout&quot;&gt;Conference Burnout&lt;/h2&gt;
&lt;p&gt;After 2013 Troy and I had a case of the burnouts kick us. He went the route of just organizing more conferences, I however went the route of not organizing any conferences, or much of anything for a while.&lt;/p&gt;
&lt;p&gt;This however lasted over a year for me, I started working on some projects, co-founded a startup, worked to raise capital with the team, built a product, ran out of money, spent most of 2015 not working, produced some training material and a lot more. Basically I was working on anything that involved not working on conference (or meetup) organizing.&lt;/p&gt;
&lt;h2 id=&quot;2016-hits-and-energy-returns&quot;&gt;2016 Hits and Energy Returns&lt;/h2&gt;
&lt;p&gt;At this point I’d had a significant amount of time off. I’d also managed to spend time in Europe, recover from my doldrums, get married to a most amazing an awesome person, and felt maybe I’d dive into some conference organizing again. I’d missed Node PDX &amp;amp; the comraderie and learning it brought. With that deduction I struck up another conversation to see if Troy was interested in organizing another Node PDX. I think it went something like this.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Adron&lt;/em&gt;&lt;/strong&gt; “Hey Troy, wanna run another Node PDX?”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Troy&lt;/em&gt;&lt;/strong&gt; “Maybe.”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Adron&lt;/em&gt;&lt;/strong&gt; “Let’s grab some coffee and discuss.”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Troy&lt;/em&gt;&lt;/strong&gt; “Alright. Should we meet at…” at this point we spend 45 minutes discussing where we should meet for coffee.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We then departed our respective locations to meet at a coffee shop somewhere in Portland. We then met and started talking about, as we often do, everything except what we were going to talk about. Then, as if spuriously interupted,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Adron&lt;/em&gt;&lt;/strong&gt; “Hey Troy, wanna run another Node PDX?”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Troy&lt;/em&gt;&lt;/strong&gt; “Ok.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So here we are now, with just 11 days to go before another Node PDX. We’re rounding up and finalizing the last steps of the effort right now. The speakers have been notified, we’ve gotten confirmations, and we’re getting the wheels on the bikes ready, the beer cooled off, the food prepared (ok, actually that’ll be prepared later), and psyched for the upcoming event. With that said, we’re definitely back in the groove and looking forward to this year’s event! We hope to see you there.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://nodepdx.org/#tickets&quot;&gt;Join us at Node PDX&lt;/a&gt;, enjoy a &lt;a href=&quot;http://nodepdx.org/lagniappe.html#bikes&quot;&gt;bike ride&lt;/a&gt; to see parts of Portland, and if you’re coming down from Seattle be sure to enjoy the &lt;a href=&quot;http://nodepdx.org/lagniappe.html#geektrain&quot;&gt;$15 buck ride&lt;/a&gt; via the &lt;a href=&quot;http://www.amtrakcascades.com/&quot;&gt;Amtrak Cascades&lt;/a&gt; to Portland for the conference.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>How to Build a Bike Shed by David Manning &amp; Adam Ulvi</title>
      <link>http://adron.github.io/articles/node-pdx-2016-speaker-david-manning-adam-ulvi/</link>
      <pubDate>Tue, 07 Jun 2016 19:20:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-speaker-david-manning-adam-ulvi/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://nodepdx.org&quot;&gt;&lt;img src=&quot;/articles/node-pdx-2016-speaker-david-manning-adam-ulvi/nodepdx-2016-logo.png&quot; alt=&quot;Node PDX 2016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;image float-right&quot;&gt;
    &lt;img src=&quot;/articles/node-pdx-2016-speaker-david-manning-adam-ulvi/davidadam.jpg&quot; alt=&quot;David Manning &amp;amp; Team&quot;&gt;
&lt;/div&gt;

&lt;p&gt;This is a very Portland, very unique to Node PDX talk, by Adam and David who work at ZHealth Documentation and have opinions about things.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Nuff’ said eh!&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Despite having no formal construction experience, Adam and David have been tasked with designing a new bike shed outside of the Olympic Mills Commerce Center. They have spent long hours in extensive research, and are excited to share their results with the community.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Attendees will receive plans and a Starter Kit of building materials.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For more important information about what a bike is, what a shed is, and how these two things combined make bike sheds, check out this useful links.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bikes: &lt;a href=&quot;https://en.wikipedia.org/wiki/Bicycle&quot;&gt;https://en.wikipedia.org/wiki/Bicycle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Sheds: &lt;a href=&quot;https://en.wikipedia.org/wiki/Shed&quot;&gt;https://en.wikipedia.org/wiki/Shed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Bike Sheds: &lt;a href=&quot;https://en.wikipedia.org/wiki/Law_of_triviality&quot;&gt;https://en.wikipedia.org/wiki/Shed#Specific-use_sheds&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Get JavaScript Running on a $2 WiFi-Enabled Device by Andrew Chalkley</title>
      <link>http://adron.github.io/articles/node-pdx-2016-speaker-andrew-chalkley/</link>
      <pubDate>Tue, 07 Jun 2016 11:20:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-speaker-andrew-chalkley/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://nodepdx.org&quot;&gt;&lt;img src=&quot;/articles/node-pdx-2016-speaker-andrew-chalkley/nodepdx-2016-logo.png&quot; alt=&quot;Node PDX 2016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;image float-right&quot;&gt;
    &lt;img src=&quot;/articles/node-pdx-2016-speaker-andrew-chalkley/andrew.jpg&quot; alt=&quot;Andrew Chalkley&quot;&gt;
&lt;/div&gt;

&lt;p&gt;Andrew Chalkley is a full-time teacher at online education provider Treehouse. He’s a polyglot programmer with a passion for hardware. Andrew’s posts on the hardware platform Arduino have been featured in Hacker Monthly and used in higher educational institutions around the world. He’s also lectured at University on JavaScript and the Internet of Things.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The ESP8266 is a very popular Internet of Things device, because of it’s price and availability. You can program it with Arduino, Python and even JavaScript. Using JavaScript on a small device doesn’t have to be difficult. Andrew will show you the easiest way to install JavaScript on am Internet of Things device and how to run your JavaScript applications on it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Blog: &lt;a href=&quot;http://forefront.io&quot;&gt;http://forefront.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Company: &lt;a href=&quot;http://teamtreehouse.com&quot;&gt;http://teamtreehouse.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github: &lt;a href=&quot;http://github.com/chalkers&quot;&gt;http://github.com/chalkers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Flasher.js: &lt;a href=&quot;http://github.com/thingssdk/flasher.js&quot;&gt;http://github.com/thingssdk/flasher.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Demystifying TypeScript Decorators by James Churchill</title>
      <link>http://adron.github.io/articles/node-pdx-2016-speaker-james-churchill/</link>
      <pubDate>Sun, 05 Jun 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-speaker-james-churchill/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://nodepdx.org&quot;&gt;&lt;img src=&quot;/articles/node-pdx-2016-speaker-james-churchill/nodepdx-2016-logo.png&quot; alt=&quot;Node PDX 2016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;image float-right&quot;&gt;
    &lt;img src=&quot;/articles/node-pdx-2016-speaker-james-churchill/james-churchill-nyc.jpg&quot; alt=&quot;James Churchill&quot;&gt;
&lt;/div&gt;

&lt;p&gt;Portlander James has worked extensively with a variety of technologies, including ASP.NET MVC, SQL Server, JavaScript, TypeScript, Knockout.js, and AngularJS. James, a self-confessed geek, enjoys talking about programming and learning new technologies. He recently joined the Treehouse team as a teacher and is excited to have the opportunity to help beginners become developers.&lt;/p&gt;
&lt;p&gt;James also enjoys participating in the greater Cascadian Developer Community, presenting talks in Portland, Seattle, Salt Lake City, Boise, Eugene, Salem, and Hood River. Last April, James started and co-organized the Portland TypeScript Meetup (&lt;a href=&quot;http://typescriptpdx.com/&quot;&gt;http://typescriptpdx.com/&lt;/a&gt; which is an awesome meetup, come check it out sometime!).&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;When he is not working, he can be found skiing with his wife and kids, remodeling the house, playing music with his band, or hanging out in the yard with his chickens.&lt;/p&gt;
&lt;p&gt;In “Demystifying TypeScript Decorators” will show us TypeScript decorators, based on the ES2016 decorator proposal and introduced as part of TypeScript 1.5, provide developers with a way to modify a JavaScript class, property, method, or method parameter using a convenient declarative syntax. We’ll start this session by creating our own decorator, to see firsthand how they work. Then, we’ll take a look at how decorators can be used in a variety of settings.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Blog: &lt;a href=&quot;http://smashdev.com&quot;&gt;http://smashdev.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github: &lt;a href=&quot;http://github.com/smashdevcode&quot;&gt;http://github.com/smashdevcode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Twitter: &lt;a href=&quot;http://twitter.com/SmashDev&quot;&gt;http://twitter.com/SmashDev&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>How to Electron by Blaine Schmeisser</title>
      <link>http://adron.github.io/articles/node-pdx-2016-speaker-blaine-schmeisser/</link>
      <pubDate>Sun, 05 Jun 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-speaker-blaine-schmeisser/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://nodepdx.org&quot;&gt;&lt;img src=&quot;/articles/node-pdx-2016-speaker-blaine-schmeisser/nodepdx-2016-logo.png&quot; alt=&quot;Node PDX 2016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;image float-left&quot;&gt;
    &lt;img src=&quot;/articles/node-pdx-2016-speaker-blaine-schmeisser/blainesch.jpg&quot; alt=&quot;Blaine Schmeisser&quot;&gt;
&lt;/div&gt;

&lt;p&gt;I’m happy to introduce Blaine Schmeisser. He’s a recent Portland transplant currently working as a Senior Software Engineer at New Relic. He has a passion for building and shipping software and an advocate for pair programming. Outside of tech, Blaine spends his free time with his dog and maintains a simplistic, eco-friendly lifestyle.&lt;/p&gt;
&lt;p&gt;Blaine’s “How to Electron” answers questions you have about building user interface applications with JavaScript. Have you ever wanted to build desktop apps with web technology you already know? If you’ve never heard of Electron or just want to learn more about it, this talk will cover what Electron is and how to utilize it to create powerful tools like Atom and Slack. You will learn the history of Electron, how to get started, the trade-offs of picking various boiler plates, and the unique Electron specific APIs that are vital to being a Electron developer.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GitHub: &lt;a href=&quot;https://github.com/blainesch&quot;&gt;https://github.com/blainesch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Twitter: &lt;a href=&quot;https://twitter.com/blainesch&quot;&gt;https://twitter.com/blainesch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Website: &lt;a href=&quot;http://blainesch.com&quot;&gt;http://blainesch.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>The SAM Pattern - a distributed system view of Front-End architectures by Jean-Jacques Dubray</title>
      <link>http://adron.github.io/articles/node-pdx-2016-speaker-jean-jacques-dubray/</link>
      <pubDate>Sat, 04 Jun 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-speaker-jean-jacques-dubray/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://nodepdx.org&quot;&gt;&lt;img src=&quot;/articles/node-pdx-2016-speaker-jean-jacques-dubray/nodepdx-2016-logo.png&quot; alt=&quot;Node PDX 2016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;image float-left&quot;&gt;
    &lt;img src=&quot;/articles/node-pdx-2016-speaker-jean-jacques-dubray/jj-sized.png&quot; alt=&quot;Jean-Jacques Dubray&quot;&gt;
&lt;/div&gt;

&lt;p&gt;Jean-Jacques Dubray is the founder of &lt;a href=&quot;http://xgen.io&quot;&gt;xgen.io&lt;/a&gt; and &lt;a href=&quot;http://www.gliiph.com&quot;&gt;gliiph&lt;/a&gt;. He has been building Service Oriented Architectures,
and API platforms for the last 15 years. He is a former member of the research staff at HRL and earned his Ph.D. from
the University of Provence (Luminy campus), home of the Prolog language. He is the inventor of the &lt;a href=&quot;http://www.xgenio.com/bolt-introduction.pdf&quot;&gt;BOLT methodology&lt;/a&gt; and the SAM pattern.&lt;/p&gt;
&lt;p&gt;In his talk Jean-Jacques Dubray presents that Web Applications are rapidly becoming sophisticated distributed systems. When you look at a Facebook page or a Netflix catalog,
the number of components interacting with each other requires complex synchronization and state management capabilities, reaching
the limits of the MVC pattern.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;In the last couple of years, several reactive architectures have started to get some interest (React, Cycle.js, ELM) without
generating significant traction (compared to established frameworks like Angular), while struggling to position effects in their
programming model. A new reactive, functional pattern, the State-Action-Model pattern (SAM) was introduced in early 2016 on the
foundation of TLA+ semantics.&lt;/p&gt;
&lt;p&gt;The pattern, which is unapologetically driven by simplicity, promotes a clear delineation between the business logic and the view
and challenges the complexity of frameworks like Google’s Angular or Facebook’s React/Redux.&lt;/p&gt;
&lt;p&gt;SAM’s unidirectional flow is also challenging interactive patterns like BFF (Back-End for Front-End) or the Vertical Slice Pattern
which suggest creating view-specific APIs, per platform, app, versions of an app…&lt;/p&gt;
&lt;p&gt;We’ll start by reviewing some of the key challenges of modern UX and Front-End Architectures. We will then present the
key concepts of SAM and walk the audience through some node.js code samples (including server-side TimeTravel).&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Modern Javascript Frameworks - Introduction to Ember.JS and Ember-CLI by Suchita Doshi</title>
      <link>http://adron.github.io/articles/node-pdx-2016-suchita-doshi/</link>
      <pubDate>Sat, 04 Jun 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-suchita-doshi/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://nodepdx.org&quot;&gt;&lt;img src=&quot;/articles/node-pdx-2016-suchita-doshi/nodepdx-2016-logo.png&quot; alt=&quot;Node PDX 2016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;image float-right&quot;&gt;
    &lt;img src=&quot;/articles/node-pdx-2016-suchita-doshi/suchita-doshi.jpg&quot; alt=&quot;Suchita Doshi&quot;&gt;
&lt;/div&gt;

&lt;p&gt;Suchita is UI Lead for the analytics module of Yahoo Admanager Plus team and Core member of Emberjs group @Yahoo, Speaker at Women Who code organization (Introduction To Emberjs/Ember CLI), Conducted Webinar for the TenXList members on EmberJS. She’s passionate about improving developers ergonomics and a hardcore “cricket” fan.&lt;/p&gt;
&lt;p&gt;In other Suchita news, she’s opening bats-woman for the Bay Area Cricket Association team! 😀&lt;/p&gt;
&lt;p&gt;Suchita describes her talk as “There will never be a “one size fits all” approach to web development. If you want your application to be minimally interactive, then server side rendered HTML would be the way to go, else, if it were a more interactive application, then client side framework would benefit you.
Why not use just JQuery instead of adopting these Modern Javascript Frameworks? Think about it! If your application has interactivity on the lighter side, then JQuery would work well, but as soon as you introduce more states in your application, it would then become messier and heavier on the DOM. You would need to use the ‘data-‘ attributes to store the data in your DOM and also remember how to map them with the triggered events.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Here is where client side frameworks come to the rescue. I have worked on several client side frameworks like Backbone.js, Ember.js. Few of the many features I love about Ember.js are the two-way data binding, Computed Properties, the run loop, convention over configuration nature, ease of handling routing and many more.
In this talk I would be covering the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Introduction to Emberjs and why Ember&lt;/li&gt;
&lt;li&gt;How Ember js makes a difference&lt;/li&gt;
&lt;li&gt;Ember convention over configuration nature&lt;/li&gt;
&lt;li&gt;Introduction to Ember routes, components and templates&lt;/li&gt;
&lt;li&gt;Introduction to Ember CLI&lt;/li&gt;
&lt;li&gt;Computed Properties&lt;/li&gt;
&lt;li&gt;Live Demo on how it’s really intuitive in a couple of non-trivial scenarios.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So basically my goal is to attract more developers to adapt modern javascript frameworks and make a difference in the way complex apps are built.”&lt;/p&gt;
</description>
    </item>
    <item>
      <title>MMOWAM - Build Server-less Games with a DSN by Josh Marinacci</title>
      <link>http://adron.github.io/articles/node-pdx-2016-speaker-josh-marinacci/</link>
      <pubDate>Fri, 03 Jun 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-speaker-josh-marinacci/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://nodepdx.org&quot;&gt;&lt;img src=&quot;/articles/node-pdx-2016-speaker-josh-marinacci/nodepdx-2016-logo.png&quot; alt=&quot;Node PDX 2016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;image float-left&quot;&gt;
    &lt;img src=&quot;/articles/node-pdx-2016-speaker-josh-marinacci/josh-marinacci.jpg&quot; alt=&quot;Josh Marinacci&quot;&gt;
&lt;/div&gt;

&lt;p&gt;Josh is an O’Reilly author, developer advocate, and recovering engineer. He is
currently head of the developer evangelism team at PubNub. Previously he worked
as a UI researcher at Nokia, and a developer advocate at Palm and Sun. He is
passionate about user interfaces and education. Josh lives in sunny Eugene,
Oregon.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Josh will be talking about building a multiplayer casual game for fun. Well, it’s fun until you have to write a server
component to run it. Now you have to implement game matching, keeping clients in
sync, in game chat, score tracking and more. In this Josh will show you how to
use a Data Stream Network (DSN) write a game without any server at all. The
network itself can connect users, load clients, and keep everything in sync
without having to learn distributed computing programming. Josh will build and
play a MMOWAM (Massively Multiplayer Online Whack-A-Mole) game to show how easy
it can be.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;game MMOWAM (whack-a-mole)&lt;/li&gt;
&lt;li&gt;show mini version of each player on dashboard&lt;/li&gt;
&lt;li&gt;show current score / level&lt;/li&gt;
&lt;li&gt;show how much is left&lt;/li&gt;
&lt;li&gt;random number syncing to ensure everyone has the same board&lt;/li&gt;
&lt;li&gt;use a random channel w/ tiny UID to let anyone join&lt;/li&gt;
&lt;li&gt;show number of players&lt;/li&gt;
&lt;li&gt;start when 4 players in? one player hit’s start? let all player see total count as well and status of the other players&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>WebSockets Bring Light at the End of the Tunnel by Joel Lord</title>
      <link>http://adron.github.io/articles/node-pdx-2016-speaker-joel-lord/</link>
      <pubDate>Fri, 03 Jun 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-speaker-joel-lord/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://nodepdx.org&quot;&gt;&lt;img src=&quot;/articles/node-pdx-2016-speaker-joel-lord/nodepdx-2016-logo.png&quot; alt=&quot;Node PDX 2016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;image float-left&quot;&gt;
    &lt;img src=&quot;/articles/node-pdx-2016-speaker-joel-lord/joel-lord.jpg&quot; alt=&quot;Joel Lord&quot;&gt;
&lt;/div&gt;

&lt;p&gt;As a Development Manager, Joel’s motivation and proven technical prowess makes him a key member of Spiria’s software development team. With a degree in computational astrophysics, his interests eventually made their way to software and Web design. Today, his knowledge of JavaScript lets him to support a variety of projects on both the front end and back end. As we move into the age of the Internet of Things, Joel is ready with his passion for programming node bots and experimenting with gadgets.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Joel is going to speak on Web Sockets and tunnels of light… or to describe it more specifically more and more, people seem to be obsessed with real-time data.  But what does real-time mean in the world of REST servers and one-way communication?  Most modern web applications are now either displaying a snapshot of data at a given time or use a polling mechanism to update series of data at a given interval.
In this talk, you will learn about the power of WebSockets and how they can (and should!) be used in your modern web applications. In these 30 minutes, I will go through the process of building a Node server that can push data to multiple clients in real-time.  You will see how this can be easy using the socket.io library.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>The Web Platform is the Universal Instrument by Ben Michel</title>
      <link>http://adron.github.io/articles/node-pdx-2016-speaker-ben-michel/</link>
      <pubDate>Thu, 02 Jun 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-speaker-ben-michel/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://nodepdx.org&quot;&gt;&lt;img src=&quot;/articles/node-pdx-2016-speaker-ben-michel/nodepdx-2016-logo.png&quot; alt=&quot;Node PDX 2016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;image float-right&quot;&gt;
    &lt;img src=&quot;/articles/node-pdx-2016-speaker-ben-michel/benmichel.jpg&quot; alt=&quot;Ben Michel&quot;&gt;
&lt;/div&gt;

&lt;p&gt;Ben Michel has a pretty epic talk scheduled for Node PDX… if you don’t know Ben he’s a Musician–Developer. He composes &amp;amp; performs live soundtracks and cares a lot about community music.&lt;/p&gt;
&lt;p&gt;The talk he has planned for you all is described as, “Music as an idea, expression, commercial endeavor, and communal art is in its most volatile state since the European Renaissance. We’ve moved from the public adoption of recording technology, through the massive rise and fall of the recording industry, to a new age that was first seeded at Bell Labs during the Computer Science era.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Max Mathews encouraged a generation of computer musicians by declaring the Nyquist-Shannon “sampling theorem shows that there are really no limits to the sounds you can make…the computer is a universal musical instrument.”&lt;/p&gt;
&lt;p&gt;Now with a fuller understanding of what Mathews was implying, we can take it a step further and say that the Browser is the universal musical instrument. It’s the most accessible, cross-compatible runtime yet–and with the growth of Web Audio and Web MIDI standardization, we’re on the verge of a new renaissance in musical collaboration and interaction.&lt;/p&gt;
&lt;p&gt;Unfortunately, the promotion of individualism in our popular culture, and the divide between developers and working artists has kept us from realizing the potential of building useful tools for distributed music collaboration, even in the web platform.&lt;/p&gt;
&lt;p&gt;Still, I can see a world coming where community music and recorded works are not identified by regional boundaries, but distributed data regions and organic peer to peer networks. If the development of Web Audio and it’s supporting standards stabilize, music collaboration and exposition could be made available to everyone with no hinderances from age, class, or personal ability.&lt;/p&gt;
&lt;p&gt;The WebSound project is my iterative solution to this problem through long-term community engagement, and Audio/MIDI tool versioning.&lt;/p&gt;
&lt;p&gt;Our first endeavor is to build a few useful live performance tools enabling remote collaboration:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Real-time Web MIDI performances streamed to a live-event, enabling the performer to lead songs or compositions remotely. Achieved through an optimized VPN and P2P WebRTC DataChannels.&lt;/li&gt;
&lt;li&gt;Communally performed live music making with MIDI controlled WebAudio and WebSocket broadcasting.&lt;/li&gt;
&lt;li&gt;Audience interaction with the exposed parameters of a live band’s instrumentation–via broadcast methods and microcontroller installations.”&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>I Play the JavaScript by Matt McKegg</title>
      <link>http://adron.github.io/articles/node-pdx-2016-speaker-matt-mckegg/</link>
      <pubDate>Thu, 02 Jun 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-speaker-matt-mckegg/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://nodepdx.org&quot;&gt;&lt;img src=&quot;/articles/node-pdx-2016-speaker-matt-mckegg/nodepdx-2016-logo.png&quot; alt=&quot;Node PDX 2016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;image float-left&quot;&gt;
    &lt;img src=&quot;/articles/node-pdx-2016-speaker-matt-mckegg/mattmckegg.jpg&quot; alt=&quot;Matt McKegg&quot;&gt;
&lt;/div&gt;

&lt;p&gt;A JavaScript hacker and backyard musician and from Wellington, New Zealand. Lover of all things open and modular. I spend most of my time pressing buttons of various shapes, sizes and colours. Sometimes these buttons make sounds.&lt;/p&gt;
&lt;p&gt;Matt has been making music with computers for about 10 years, but once he tried to move from bedroom composing to live performance, he got incredibly frustrated at how hard it was to play computer music live. He decided to start working on his own live electronic performance software written in JavaScript that would let me play the way he wanted to play. 3 years later, it’s finally starting to become a reality.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Here is one of the Matt’s recent performances, for your viewing pleasure. &lt;/p&gt;
&lt;iframe width=&quot;1280&quot; height=&quot;720&quot; src=&quot;https://www.youtube.com/embed/L2BVDJWHdy0?rel=0&amp;amp;showinfo=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;</description>
    </item>
    <item>
      <title>The House Is Not On Fire - Building a home automation robot with Arduino, Raspberry Pi and Node.js by Artur Paikin</title>
      <link>http://adron.github.io/articles/node-pdx-2016-speaker-artur-paikin/</link>
      <pubDate>Wed, 01 Jun 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-speaker-artur-paikin/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://nodepdx.org&quot;&gt;&lt;img src=&quot;/articles/node-pdx-2016-speaker-artur-paikin/nodepdx-2016-logo.png&quot; alt=&quot;Node PDX 2016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;image float-right&quot;&gt;
    &lt;img src=&quot;/articles/node-pdx-2016-speaker-artur-paikin/art-stida.jpg&quot; alt=&quot;Artur Paikin&quot;&gt;
&lt;/div&gt;

&lt;p&gt;Artur describes himself as, “I’m a web developer and traveler. I write stories about my adventures in Russian and English on my site: &lt;a href=&quot;http://arturpaikin.com&quot;&gt;http://arturpaikin.com&lt;/a&gt; and run a small technology cooperative called &lt;a href=&quot;http://unebaguette.com&quot;&gt;Baguette&lt;/a&gt;, where I work on cool projects, currently building an ambitious next generation file uploader with &lt;a href=&quot;https://transloadit.com/&quot;&gt;Transloadit&lt;/a&gt;. I ride a &lt;a href=&quot;https://www.instagram.com/p/xC0qC2SSYb&quot;&gt;foldable bicycle&lt;/a&gt;, &lt;a href=&quot;http://unebaguette.com/web-course/&quot;&gt;teach&lt;/a&gt; web development and sometimes &lt;a href=&quot;https://www.instagram.com/p/4_6LO8ySVL/&quot;&gt;garden&lt;/a&gt; on the balcony.”&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Artur has built an open source home automation system called &lt;a href=&quot;https://github.com/arturi/kotihome&quot;&gt;Koti Home&lt;/a&gt; (Koti means home in Finnish language). It’s powered by an Arduino connected to Raspberry Pi, MQTT protocol for messaging, Node.js on the client and server, web sockets. You can interact with Koti robot via a React (like the cool kids do) control panel, Telegram Chat Bot and even your own voice.&lt;/p&gt;
&lt;p&gt;Arthur will talk about how he’s turned this project into reality — the tech he used and the challenges he faced. From a blinking LED to a voice controlled home automation robot.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Code First Docs How we Threw Out The Book &amp; Put Code First With Twilio Documentation by Jarod Reyes</title>
      <link>http://adron.github.io/articles/node-pdx-2016-speaker-jarod-reyes/</link>
      <pubDate>Wed, 01 Jun 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-speaker-jarod-reyes/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://nodepdx.org&quot;&gt;&lt;img src=&quot;/articles/node-pdx-2016-speaker-jarod-reyes/nodepdx-2016-logo.png&quot; alt=&quot;Node PDX 2016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;image float-left&quot;&gt;
    &lt;img src=&quot;/articles/node-pdx-2016-speaker-jarod-reyes/jarodreyes.jpg&quot; alt=&quot;Jarod Reyes&quot;&gt;
&lt;/div&gt;

&lt;p&gt;Jarod is alarmingly disinterested in “how things are done”. He spent much of his grade school years disrupting class, running social experiments and singing love ballads to his teachers. Nowadays he can be found working with an exceptional team of developers at Twilio who are laser-focused on improving the landscape of developer documentation.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Jarod describes Code First Docs as&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“My job at Twilio is straightforward, write documentation that doesn’t suck. This may seem fairly straightforward, but it turns out to be harder than an &lt;a href=&quot;https://c1.staticflickr.com/5/4048/4353601145_5c12467871_b.jpg&quot;&gt;Atari 2600 cartridge&lt;/a&gt;. For the last 30 years we have asked developers to do their jobs by equipping them with essentially giant books that we have adapted to the internet age by simply putting them on the web. At Twilio we weren’t satisfied with this traditional approach so we threw out the book and challenged some basic assumptions about creating documentation for developers.&lt;/p&gt;
&lt;p&gt;What is the journey of the modern developer? How does documentation fit into their flow? Are there ways to create documentation that enables developers to work smarter, as opposed to interrupting their day? We’ll discuss these questions and more as I share how we got to the realization that we needed a documentation revolution; this is the story of how we raised up code to be the supreme leader of documentation.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Twitter: &lt;a href=&quot;https://twitter.com/jreyesdev&quot;&gt;@jreyesdev&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github: &lt;a href=&quot;https://github.com/jarodreyes&quot;&gt;github.com/jarodreyes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Ops for Devs by Adam Ulvi</title>
      <link>http://adron.github.io/articles/node-pdx-2016-speaker-adam-ulvi/</link>
      <pubDate>Tue, 31 May 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-speaker-adam-ulvi/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://nodepdx.org&quot;&gt;&lt;img src=&quot;/articles/node-pdx-2016-speaker-adam-ulvi/nodepdx-2016-logo.png&quot; alt=&quot;Node PDX 2016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Node applications exist at the end of a long, somewhat magical series of tubes. What spells are being cast to make this all work? Let’s find out!&lt;/p&gt;
&lt;p&gt;In this talk Adam will explore the steps required to host a Node application on a small, affordable linux virtual private server (like a DigitalOcean droplet). This is not a tutorial, but rather, a walk-through of the configuration steps, background information the role each step plays, and the “why” behind the choices we are making.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;div class=&quot;image float-right&quot;&gt;
    &lt;img src=&quot;/articles/node-pdx-2016-speaker-adam-ulvi/adamulvi.jpg&quot; alt=&quot;Adam Ulvi&quot;&gt;
&lt;/div&gt;

&lt;p&gt;The reference implementation is taken from the current production gruntjs.com server.&lt;/p&gt;
&lt;p&gt;By following the request lifecyle, we will touch on basic tcp/ip networking, DNS configuration and history, node application development, nginx proxy configuration, and basic linux system configuration.&lt;/p&gt;
&lt;p&gt;At the end of the presentation developers should have a better understanding of the simple application’s infrastructure requirements, external dependencies, and targets of opportunity for future improvement.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Github: &lt;a href=&quot;http://github.com/aulvi&quot;&gt;github.com/aulvi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IRC: s5fs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I’m looking forward to Adam’s talk, since I’ve been doing a lot of ops along with my dev work lately. Come check out Adam’s talk at &lt;a href=&quot;http://nodepdx.org/#tickets&quot; target=&quot;_blank&quot;&gt;Node PDX&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Speakers and More For Node PDX 2016</title>
      <link>http://adron.github.io/articles/speakers-and-more-for-node-pdx-2016/</link>
      <pubDate>Tue, 24 May 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/speakers-and-more-for-node-pdx-2016/</guid>
      <author></author>
      <description>&lt;p&gt;Spock and I are excited to announce our first set of speakers for &lt;a href=&quot;http://nodepdx.org/&quot; target=&quot;_blank&quot;&gt;Node PDX 2016&lt;/a&gt;, which you’ve seen slowly coming out each day! I hope you’re ready and have your &lt;a href=&quot;http://nodepdx.org/#tickets&quot; target=&quot;_blank&quot;&gt;tickets&lt;/a&gt; bought already. So far I’ve introduced &lt;a href=&quot;http://blog.adron.me/articles/node-pdx-2016-speaker-tomomi-imura/&quot;&gt;Tomomi&lt;/a&gt;, &lt;a href=&quot;http://blog.adron.me/articles/node-pdx-2016-speaker-jonny-oropeza/&quot;&gt;Jon&lt;/a&gt;, and &lt;a href=&quot;http://blog.adron.me/articles/node-pdx-2016-speaker-liz-abinante/&quot;&gt;Liz&lt;/a&gt;. Today I’ll introduce Adam Ulvi a bit later.&lt;/p&gt;
&lt;p&gt;We’ve also announced the &lt;a href=&quot;http://nodepdx.org/lagniappe.html#geektrain&quot; target=&quot;_blank&quot;&gt;Geek Train for Node PDX&lt;/a&gt; and the &lt;a href=&quot;http://nodepdx.org/lagniappe.html#bikes&quot; target=&quot;_blank&quot;&gt;Node PDX Bike Ride&lt;/a&gt;. A little &lt;a href=&quot;http://www.merriam-webster.com/dictionary/lagniappe&quot; target=&quot;_blank&quot;&gt;lagniappe&lt;/a&gt; if you will.  ;)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.adron.me/articles/node-pdx-2016-speaker-tomomi-imura/&quot;&gt;Tomomi&lt;/a&gt;, &lt;a href=&quot;http://blog.adron.me/articles/node-pdx-2016-speaker-jonny-oropeza/&quot;&gt;Jon&lt;/a&gt;, and &lt;a href=&quot;http://adron.github.io/articles/speakers-and-more-for-node-pdx-2016/&quot;&gt;Liz&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/speakers-and-more-for-node-pdx-2016/spock-horns.jpg&quot; alt=&quot;Spock&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;http://nodepdx.org/&quot; target=&quot;_blank&quot;&gt;Node PDX 2016&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;Geek Train&lt;/strong&gt; provides super cheap $15 train fare from anywhere north of Portland along the Amtrak Cascades route. I’ll actually meet the train in Seattle and ride from Seattle back to Portland for the conference. How that works is if you’re in Bellingham, Everett, Seattle, Tacoma, or wherever along the northern stretch can &lt;a href=&quot;https://ti.to/nodepdx/nodepdx-2016/with/gl6purbdlmo&quot; target=&quot;_blank&quot;&gt;purchase a ticket from us here&lt;/a&gt;. Once you purchase a ticket we’ll all have tickets for a specific train and will board along the line and join up in a specific car on the train (which we’ll have assigned day of the trip).&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;bike ride&lt;/strong&gt; will make a loop through west and east of the Willamette River with a chance to check out all sorts of parts of the city. We’ll stop and try some of the wicked tasty locally roasted coffee and roll into one of the local taprooms that has dozens of local brews on tap. Between those tasty beverages I’ll point out some of the most excellent architecture, bridge design (ya like bridges eh?), neighborhoods, and other things that are characteristic of Portland. This will be a slow ride, so no need to have alley cat like reflexes and riding skills, just come and enjoy a chill, casual, and fun slow ride through Portland.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;http://dotnetfringe.org/&quot; target=&quot;_blank&quot;&gt;.NET Fringe 2016&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;For .NET Fringe we’ll have the announcements for speakers coming very soon. We’ve taken a slightly different approach with a voting mechanism among organizers which we’ll be wrapping up and then will hurry up with the announcement, I know everybody needs to know ASAP!&lt;/p&gt;
&lt;p&gt;We’ll also be setting up a Geek Train &amp;amp; .NET Fringe bike ride too, we’ve just got to get everything posted. So keep an eye on the .NET Fringe site or &lt;a href=&quot;http://dotnetfringe.org/#signup&quot; target=&quot;_blank&quot;&gt;subscribe to updates&lt;/a&gt; and it’ll have updates popping up real soon.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>A Foolish Quest Creating Knitting Patterns Using JavaScript by Liz Abinante</title>
      <link>http://adron.github.io/articles/node-pdx-2016-speaker-liz-abinante/</link>
      <pubDate>Mon, 23 May 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-speaker-liz-abinante/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://nodepdx.org&quot;&gt;&lt;img src=&quot;/articles/node-pdx-2016-speaker-liz-abinante/nodepdx-2016-logo.png&quot; alt=&quot;Node PDX 2016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://blog.adron.me/articles/node-pdx-2016-speaker-liz-abinante/knitting.png&quot; class=&quot;image float-left&quot; /&gt;Liz Abinante lives in Portland, Oregon and works as a Senior Software Engineer at &lt;a href=&quot;https://newrelic.com/&quot;&gt;New Relic&lt;/a&gt;. She is infectiously enthusiastic about web development, teaching, learning, and feminism. She used to write JavaScript, then walked up to the wrong desk one day and now she writes some Java too. She enjoys speaking at conferences, knitting, sewing, and a hacking away on interesting problems. She swears she’s a lot more interesting than this bio makes her sound. She’s often been compared to cartoon characters due to her enormous personality and penchant for singing and/or dancing her way through life.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;liz.jpg&quot; class=&quot;image float-right&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Liz’s presentation is &lt;strong&gt;&lt;em&gt;A Foolish Quest: Creating Knitting Patterns Using JavaScript&lt;/em&gt;&lt;/strong&gt;. The talk will show taking something real-world and math-based, like knitting, and turning into a program is actually super easy (no one is surprised here). But! What happens when you combine that with best practices and expected conventions, along with industry-wide standards for design and presentation? Things get a lot more complicated than just crunching numbers, especially when your output will result in lots of manual hours for people creating a real object. This is the story of how Liz built a customizable knitting pattern generator in JavaScript (after she’d built it in Ruby first, of course), and the lessons learned when you try and do math for more than just math’s sake.&lt;/p&gt;
&lt;p&gt;Join the Node PDX Conference by &lt;a href=&quot;http://nodepdx.org/#tickets&quot; target=&quot;_blank&quot;&gt;buying a ticket&lt;/a&gt; and come check out Liz’s presentation!&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Isomorphic Business Logic (Or How to convince even the most die-hard C#/Java/Rails-on-the-Backend boss that you need to run a node server) Jonny Oropeza</title>
      <link>http://adron.github.io/articles/node-pdx-2016-speaker-jonny-oropeza/</link>
      <pubDate>Wed, 18 May 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-speaker-jonny-oropeza/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://nodepdx.org&quot;&gt;&lt;img src=&quot;/articles/node-pdx-2016-speaker-jonny-oropeza/nodepdx-2016-logo.png&quot; alt=&quot;Node PDX 2016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;image float-right&quot;&gt;
    &lt;img src=&quot;/articles/node-pdx-2016-speaker-jonny-oropeza/jon.jpg&quot; alt=&quot;Jon Oropeza&quot;&gt;
&lt;/div&gt;

&lt;p&gt;Jon Oropeza is a full-stack engineer at HD Quote Center, a post-aquisition startup solving tricky ecommerce problems for their parent company, The Home Depot. Prior to that, he designed and developed software for the insurance industry with his partners at LifePro Financial Services, and also co-founded a deep learning / computer vision oriented startup called Tilt Video.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Jon will be presenting “&lt;strong&gt;Isomorphic Business Logic (Or How to convince even the most die-hard C#/Java/Rails-on-the-Backend boss that you need to run a node server)&lt;/strong&gt;“ which might just be the talk with the longest title of the conference!&lt;/p&gt;
&lt;p&gt;Business logic is all the tricky calculations, rules and transformations that never seem to be in the hot new framework’s example ToDo app. Lately I’ve been finding it’s also the key to convincing clients and bosses that they NEED to run a node layer, no matter what other backend techs they happen to be rocking. In this talk I’ll dive into why and how, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An intro to isomorphic javascript&lt;/li&gt;
&lt;li&gt;Challenges that arise from wanting a performant client and server-side verification&lt;/li&gt;
&lt;li&gt;How this gets exacerbated if you happen to be using a microservices-based backend&lt;/li&gt;
&lt;li&gt;Business logic - that pesky stuff that isn’t in the ToDo App&lt;/li&gt;
&lt;li&gt;Story time: A real world example of an app trying to apply the same logic in 2 different languages&lt;/li&gt;
&lt;li&gt;Isomorphic business logic to the rescue!&lt;/li&gt;
&lt;li&gt;The close… How all of this translates to ‘you need to run a node server’ :)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Come check out Jon’s talk at &lt;a href=&quot;http://nodepdx.org/#tickets&quot; target=&quot;_blank&quot;&gt;Node PDX&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>From Software to Hardware How Do I Track My Cat with JavaScript Tomomi Imura</title>
      <link>http://adron.github.io/articles/node-pdx-2016-speaker-tomomi-imura/</link>
      <pubDate>Tue, 17 May 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-speaker-tomomi-imura/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://nodepdx.org&quot;&gt;&lt;img src=&quot;/articles/node-pdx-2016-speaker-tomomi-imura/nodepdx-2016-logo.png&quot; alt=&quot;Node PDX 2016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I’m stoked to introduce Tomomi (&lt;a href=&quot;http://twitter.com/girlie_mac&quot;&gt;@girlie_mac&lt;/a&gt;). Tomomi is an avid open web &amp;amp; open technology advocate and creative technologist, who had been active in the mobile space for past 8+ years. Now she is working at PubNub in San Francisco. When she is not at work, she still geeks around and hacks some stuff like Amazon Dash to Rickroll people.&lt;/p&gt;
&lt;p&gt;Tomomi will be presenting “&lt;strong&gt;From Software to Hardware: How Do I Track My Cat with JavaScript&lt;/strong&gt;“.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;jamie-detected.png&quot; class=&quot;image float-right&quot; /&gt;&lt;/p&gt;
&lt;p&gt;In the era of Internet of Things, connecting things to the mobile devices and web is becoming ubiquitous. You can control room light using your mobile phone. You can monitor your heart rate and weight on browser. JavaScript engineers like you already have skills to prototype ideas to build software, so why not hardware too?&lt;/p&gt;
&lt;p&gt;Tomomi, a front-end engineer with no background in electrical engineering, tells how she got started with hardware hacking with JavaScript, also talks about her recent fun project, &lt;a href=&quot;https://github.com/girliemac/RPi-KittyCam&quot;&gt;KittyCam&lt;/a&gt;, a Raspberry Pi camera with cat facial detection to see when her cat Jamie is eating while being away from home.&lt;/p&gt;
&lt;p&gt;If you’re interested in seeing Tomomi speak, get registered for &lt;a href=&quot;http://nodepdx.org/&quot; target=&quot;_blank&quot;&gt;Node PDX before the tickets are gone&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Dropping the Ball, GSD, and Staying Productive</title>
      <link>http://adron.github.io/articles/dropping-the-ball-gsd-and-staying-productive/</link>
      <pubDate>Thu, 12 May 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/dropping-the-ball-gsd-and-staying-productive/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;em&gt;[&lt;strong&gt;NOTE:&lt;/strong&gt; This was actually written Thursday the 5th, things make more sense with that in mind.]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I sat here today, and several normal things happened that made me think of some seriously important things. The thoughts are presented very well by Scott Hanselman in a talk on &lt;em&gt;scaling oneself&lt;/em&gt;. He’s got a lot of gems in this presentation (links and video below), which he’s given a few times. In those presentations he makes a few very quotable statements that I had pop into my mind.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“It’s not what you read, it’s what you ignore.” - Scott Hanselman&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The other really great gem is,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Sometimes &lt;em&gt;&lt;strong&gt;dropping the ball&lt;/strong&gt;&lt;/em&gt; is the right thing to do.”  - Scott Hanselman&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Both of these are so true. It’s an important balancing act that one must perform to maintain a high level of productivity, especially in any complex work. Seriously, even digging a ditch can be complex, just look at Boston. They spent the years 1982 through 2002 to work on this project. They failed a dozen times on a dozen aspects of the project. It barely finished even a percentage of what was intended all for an initial estimate that was $2.8 Billion that ended up being $14.8 billion (only $8.08 Billion in 1982 dollars though :o ). In this situation, just to finish, the city had to actually drop the ball on a number of aspects of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Big_Dig&quot; target=&quot;_blank&quot;&gt;Big Dig&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But I digress, my problems I’m working on solutions for aren’t anywhere near the dilemma of the Big Dig. I do however find myself needing to chose between becoming swamped and living life, or dropping the ball. If I chose carefully I can still succeed even while dropping the ball on some things. Because sometimes it is indeed, the right thing to do.&lt;/p&gt;
&lt;p&gt;An alternative,&lt;strong&gt; delegate &lt;/strong&gt;and get help.&lt;/p&gt;
&lt;p&gt;Another solution to dropping the ball or not dropping the ball, is to simply delegate and pass the ball to others who can help out. Both &lt;em&gt;dropping the ball&lt;/em&gt; and &lt;em&gt;delegating&lt;/em&gt; are honestly great leadership skills that can be harnessed to effectively multiply your productivity levels. Both of them can seem almost like the same thing to those that have expectations upon your work, and both can be force multipliers for you, but their results can obviously be very different initially. In the end, both end up requiring someone to pick up the work or write off the work. I’ll leave you to guess which one results in which result. ;)&lt;/p&gt;
&lt;p&gt;As these things popped into my head I looked at my immediate to-do list of things. I knew I was rather bombarded with things I needed to do, so it was time to figure out what could be delegated and what could be dropped. This list, of course is only &lt;em&gt;tech related&lt;/em&gt; and &lt;em&gt;work&lt;/em&gt; related. It is also a list that has to be done before the end of the week, which is Sunday @ 6pm in time for Game of Thrones for this particular instance.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Infrastructure: DNS migration completion from provider X to Google Cloud DNS via Terraform &amp;amp; Atlas.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Resolve a firewall change.&lt;/li&gt;
&lt;li&gt;Determine Zookeeper working situation with Kubernetes &amp;amp; container tech vs. installed on VM. Prepare a seamless immutable infra deployment of said Zookeeper cluster.&lt;/li&gt;
&lt;li&gt;.NET Fringe - Setup voting for proposals and get team to vote.&lt;/li&gt;
&lt;li&gt;.NET Fringe - Get bike ride event posted for day before conference.&lt;/li&gt;
&lt;li&gt;.NET Fringe - Get schedule put together for workshops.&lt;/li&gt;
&lt;li&gt;.NET Fringe - Finalize curriculum, course topics, abstracts, and titles for workshops.&lt;/li&gt;
&lt;li&gt;.NET Fringe - Get Geek Train setup, scheduled, call Amtrak to confirm date and get a ticket block.&lt;/li&gt;
&lt;li&gt;.NET Fringe - Get marketing done around Geek Train, Bike Ride, Workshops, etc.&lt;/li&gt;
&lt;li&gt;.NET Fringe - Update website w/ progress.&lt;/li&gt;
&lt;li&gt;Node PDX - Get bike ride event posted for day before conference.&lt;/li&gt;
&lt;li&gt;Node PDX - Get schedule put together for workshops.&lt;/li&gt;
&lt;li&gt;Node PDX - Meet with Code Fellows about partnership and workshop resources (space etc)&lt;/li&gt;
&lt;li&gt;Node PDX - Get proposals sorted and prepared for selection and make selection w/ team.&lt;/li&gt;
&lt;li&gt;Node PDX - Get Geek Train setup, scheduled, call Amtrak to confirm date and get a ticket block.&lt;/li&gt;
&lt;li&gt;PDX Node - (Not PDX Node and not Node PDX!) meetup tonight (Thursday) at Urban Airship to plan the future of the meetup and coordinate with organizers!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ok, that’s enough. You get the idea. I’m a bit underwater on things. But this is how it works. There are weeks where there isn’t a high priority on a single thing, and then BOOM, the deluge has come upon me and I have no hope of finishing things in a timely manner. Privatization, delegation, and dropping the ball are the options available during this time.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Question Things, Question Yourself, Always Ask Questions&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I always ask several questions about things I need to get done during this time. For instance, how could I get help or even get someone to organize a bike ride or do the work of setting up logistics around the geek train? How could I make the amount of work I need to do to setup the DNS migration and complete it the absolute minimum while ensuring it’ll get done right, on time, and seamlessly without interruption? Could I just drop the Zookeeper and Kubernetes work for now? There is always a balance to be reached among things that provides the maximum return.&lt;/p&gt;
&lt;p&gt;Among all the questions there are two other things that are super important. Again, I’m going to pull a Hanselman quote.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Effectiveness is doing the right thing.
Efficiency is doing things right.  - &lt;em&gt;Scott Hanselman&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;These two things are huge. If either falters, even in a small way, I’ve found it’s better to call a full stop and reflect on what I’m doing. I’ve also found, that when others start to give in and their efficiency and effectiveness drops, it’s time to call a full stop. This is something that’s hugely helpful when providing leadership for people too, help them help you help everybody move forward and don’t let them fall prey to be overworked and overwhelmed!&lt;/p&gt;
&lt;p&gt;These are a few things, largely focused around Scott’s blog entries and presentations. Absolutely great, well researched, and he practices what he preaches. Scott is a seriously kick ass, highly reliable, consistent guy.&lt;/p&gt;
&lt;p&gt;On to some other things that Scott might have said, but these are things I’ve come up with just from life. The following might actually seem counter-intuitive, but I promise you when these practices are mastered you will stand out strong while others falter around you. However they’re tricky, because if you have a “warm body in seat” type of boss, don’t have work flexibility around hours, schedule, remote or onsite all of these become extremely difficult. In spite of this they’re all wroth investing in to get them to work for you. I’ve easily quadrupled what I can do by doing the following.&lt;/p&gt;
&lt;p&gt;&lt;h1&gt;My Productivity List&lt;/h1&gt;
Remember one thing. Work is not your core focus and reason to exist in life. &lt;strong&gt;&lt;em&gt;You, your family, your love is why you work in order to live and to create and build&lt;/em&gt;&lt;/strong&gt;. Don’t get these things mixed up ever. If work takes to much toll, figure something out to reduce it’s damage to your life.&lt;/p&gt;
&lt;h2 id=&quot;coffee-without-work&quot;&gt;Coffee Without Work&lt;/h2&gt;
&lt;p&gt;Have your &lt;em&gt;&lt;strong&gt;coffee without work in the morning&lt;/strong&gt;&lt;/em&gt;. I can’t rave enough about getting one’s head in the game before actually starting on work tasks. Whatever your morning tradition is, mine being that wicked awesome coffee that Portland is famous for, this needs to be done without having work interfere. If someone is emailing you or calling you don’t let it interrupt. If you feel you need to be interrupted in the morning then you really need to find different work where this time will be respected.&lt;/p&gt;
&lt;p&gt;You might have another coffee with coffee folk at work, but whatever the case, have your first coffee in your own head space without interruptions. Better yet, have it with your wife, children, or loved ones so you remember why you are who you are and do what you do.&lt;/p&gt;
&lt;h2 id=&quot;cut-the-to-do-list-in-half&quot;&gt;Cut The To-do List in Half&lt;/h2&gt;
&lt;p&gt;Ever noticed the lies of to-do lists? It takes practice to create to-do lists that are actually able to be completed on a schedule. Don’t even lie about it, that’s what all of our first to-do lists do, is lie to us. There are tons of rules and thoughts around to-do lists. Keep em’ to three isn’t a bad one, but as you’ve seen I have a catastrophe in the making listed above. So I need to split that to-do list into manageable segments.&lt;/p&gt;
&lt;p&gt;The times to-do lists turn into a multidimensional array of to-do lists are to frequent to count. So cut them in half, stay focused on one list. ONE LIST, not anymore. If you have more delete them. They’re waste, total waste. I keep a single list and &lt;em&gt;notes&lt;/em&gt;. The notes are merely random thoughts and things that might one day end up one day on a list. That leads me to the next thing…&lt;/p&gt;
&lt;h2 id=&quot;write-note-and-think&quot;&gt;Write, Note, and Think&lt;/h2&gt;
&lt;p&gt;Write down things, not particularly lists, but just things that you think or ponder frequently. This helps one formalize what their thoughts are. Write these notes and think, think, and think some more. For me, this helps me refocus and insure I’m always working (or actively procrastinating at least) effectively and efficiently on things instead of getting hit with analysis paralysis or other such anti-pattern problems.&lt;/p&gt;
&lt;h2 id=&quot;take-a-break&quot;&gt;Take a Break&lt;/h2&gt;
&lt;p&gt;Take a break frequently. Taking a break frequently and move around. Walk around a space, the block, or whatever you can find. Walk for at least 15 minutes every 2-4 hours. I’m sure doctors say this too, but I’ve got this on my list of productivity helpers because it legitimately helps people keep that brain clear and helps in numerous other ways. This activity will also help knock out thinking road blocks, resolve errors that crop up, and generally keep you quick thinking. Otherwise we humans tend to fade at a dramatically faster rate during the day without a break, in spite of what we sometimes think we need to do. So take a break, walk around.&lt;/p&gt;
&lt;h2 id=&quot;be-active-stay-healthy-blagh-blagh-blagh-&quot;&gt;Be Active, Stay Healthy… Blagh Blagh Blagh…&lt;/h2&gt;
&lt;p&gt;I’m touchy about this one and I know a bunch of people are. But this is seriously pivotal to staying productive! There are more studies than I can count and might hit on the topic in a subsequent blog entry. For now, it’s safe to say I stay active and it is massive part of how I stay productive.&lt;/p&gt;
&lt;h2 id=&quot;don-t-work-hard-work-smart&quot;&gt;Don’t Work Hard, Work Smart&lt;/h2&gt;
&lt;p&gt;This is said by half the planet, but seriously take it to heart. If you’re working hard, then you’re likely getting behind. If you find yourself repeatedly doing some copy and pasting, or just cranking through typing line after line of some nonsense, or you’ve been delved into a problem for many hours, step back. Are you just working hard at the problem or actually trying to work smartly to resolve the problem? Far to often we work at the problem instead of trying to actually think our way through the problem or even around the problem!&lt;/p&gt;
&lt;p&gt;Another article I saw popup recently, which translates to the idea behind don’t work hard, work smart is &lt;a href=&quot;http://www.inc.com/will-yakowicz/stop-being-busy-and-start-being-productive.html&quot; target=&quot;_blank&quot;&gt;stop being busy, start being productive&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;don-t-meeting-&quot;&gt;Don’t &lt;em&gt;Meeting&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;Does this need repeated? There’s a reason there are other options on meeting invites besides the &lt;em&gt;accept&lt;/em&gt; option. Use them readily, frequently, and with intent. Remove yourself from, and don’t let yourself fall into the trap of creating meetings that are unnecessary. &lt;a href=&quot;https://gettingreal.37signals.com/ch07_Meetings_Are_Toxic.php&quot; target=&quot;_blank&quot;&gt;Meetings are toxic&lt;/a&gt;, and seriously one of the biggest problems of going to &lt;em&gt;work&lt;/em&gt; is that far to often work doesn’t happen at work. Largely because of, as Jason Fried states, “&lt;em&gt;M &amp;amp; M&lt;/em&gt;“.&lt;/p&gt;
&lt;iframe width=&quot;1280&quot; height=&quot;720&quot; src=&quot;https://www.youtube.com/embed/5XD2kNopsUs?rel=0&amp;amp;showinfo=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;For the last few, these are just a few things to NOT do. If you find yourself stuck in these anti-patterns of productivity start looking for a way out. These anti-patterns are basically indicators of a death march. You aren’t going to fix it, let it die.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;em&gt;&lt;strong&gt;requested&lt;/strong&gt;&lt;/em&gt; overtime happens more than once a month. I’d even say, if overtime requests happens more than once a year, get out. This is a sure indicator of being underfunded, understaffed, poorly managed, and a lack of project leadership that understand how to achieve the best results  for a project, product, service, or otherwise. The only time overtime is acceptable is if &lt;em&gt;&lt;strong&gt;YOU&lt;/strong&gt;&lt;/em&gt; choose for &lt;em&gt;&lt;strong&gt;YOU&lt;/strong&gt;&lt;/em&gt; or &lt;em&gt;&lt;strong&gt;YOUR COMPANY&lt;/strong&gt;&lt;/em&gt; to work overtime. In the same turn, don’t request of others this nonsensical thing, it’s a sure sign you’ve lost control of dictating your company’s future effectively.&lt;/li&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Do not lose sleep&lt;/strong&gt;&lt;/em&gt;. Unless it’s because you’re super excited, that happens sometimes. But if you do lose sleep, make absolutely sure that you regain it somehow. If you lose sleep to often you will absolutely, 100% land in a seriously flawed and troublesome failing state. This is not a good situation to be in.&lt;/li&gt;&lt;/li&gt;
&lt;li&gt;This next one might sound odd, but I do nto jest even lightly about this one. &lt;em&gt;&lt;strong&gt;Drink more water&lt;/strong&gt;&lt;/em&gt; than you do now. Statistically Americans are somewhere around 96-97% chronically dehydrated. That means we’re almost always operating under less than ideal personal physical condition. This is very bad… if you don’t buy this one, go read up on how dehydration works. Then think about it, I promise it’s far more important than you might thing and it’s ridiculously easy to actually fix. This isn’t the 10th century anymore, nobody is really walking down to the river for water, just grab a bottle and carry it on your person.&lt;/li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;A few more related references:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;First and foremost, check out Scott’s &lt;a href=&quot;http://www.hanselman.com/blog/ScottHanselmansCompleteListOfProductivityTips.aspx&quot; target=&quot;_blank&quot;&gt;list of tips&lt;/a&gt;.&lt;/li&gt;&lt;/li&gt;
&lt;li&gt;Here’s one Scaling Yourself from 2012 @ Dev Day&lt;/li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe width=&quot;1280&quot; height=&quot;720&quot; src=&quot;https://www.youtube.com/embed/IWPgUn8tL8s?rel=0&amp;amp;showinfo=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;ul&gt;
&lt;li&gt;Also Scaling Yourself at goto; conf.&lt;/li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe width=&quot;1280&quot; height=&quot;720&quot; src=&quot;https://www.youtube.com/embed/FS1mnISoG7U?rel=0&amp;amp;showinfo=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    <item>
      <title>Immutable Infrastructure - Some Reads and Clarification of What It Is</title>
      <link>http://adron.github.io/articles/immutable-infrastructure-some-reads-clarification-what-it-is/</link>
      <pubDate>Tue, 12 Apr 2016 13:39:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/immutable-infrastructure-some-reads-clarification-what-it-is/</guid>
      <author></author>
      <description>&lt;p&gt;First let’s get these terms a little more defined with the help of some well written articles on the matter.&lt;/p&gt;
&lt;h2 id=&quot;an-introduction-to-immutable-infrastructure&quot;&gt;An Introduction to Immutable Infrastructure&lt;/h2&gt;
&lt;p&gt;A well written piece by &lt;a href=&quot;https://twitter.com/joshstella&quot; target=&quot;_blank&quot;&gt;@joshstella&lt;/a&gt; on O’Reilly Radar titled “&lt;a href=&quot;http://radar.oreilly.com/2015/06/an-introduction-to-immutable-infrastructure.html&quot; target=&quot;_blank&quot;&gt;An Introduction to Immutable Infrastructure&lt;/a&gt;“. Here are some key elements in Josh’s description of immutable infrastructure.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Immutable infrastructure (II) provides stability, efficiency, and fidelity to your applications through automation and the use of successful patterns from programming.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This provides a basic description, at a very high level, of what immutable infrastructure is. The keys to note are the idea of programming the infrastructure instead of tediously setting it up manually as has traditionally been done.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Immutable infrastructure requires full automation of your runtime environment. This is only possible in compute environments that have an API over all aspects of configuration and monitoring. Therefore, II can be fully realized only in true cloud environments. It is possible to realize some benefits of II with partial implementations, but the true benefits of efficiency and resiliency are realized with thorough implementation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In this part another key point, from a functional perspective of what immutable infrastructure is, is brought up. The availability of APIs to control all aspects of the infrastructure and beyond are needed to truly implement this pattern of infrastructure use. Without APIs to programmatically enable this there is no way to truly create immutable infrastructure.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Historically, we’ve thought of machine uptime and maintenance as desirable because we associate the health of the overall service or application with them. In the data center, hardware is expensive and we need to carefully craft and maintain each individual server to preserve our investments over time. In the cloud, this is an anachronistic perspective and one we should give up on in order to create more resilient, simpler, and ultimately more secure services and applications.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Paraphrased - kill your tediously and manually managed servers! &lt;em&gt;Woohoo!&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;why-you-should-build-an-immutable-infrastructure&quot;&gt;Why You Should Build an Immutable Infrastructure&lt;/h2&gt;
&lt;p&gt;“&lt;a href=&quot;https://blog.codeship.com/immutable-infrastructure/&quot; target=&quot;_blank&quot;&gt;Why You Should Build an Immutable Infrastructure&lt;/a&gt;“ by &lt;a href=&quot;http://Even though the  https://twitter.com/flomotlik&quot; target=&quot;_blank&quot;&gt;@flomotlik&lt;/a&gt; is an excellent write up with a bit more detail about how, where, and why to build out immutable infrastructure. The blog &lt;a href=&quot;https://twitter.com/codeship&quot; target=&quot;_blank&quot;&gt;@Codeship&lt;/a&gt; overall is an excellent place to find more implementation details about designing, uses, and ways to put together your own immutable infrastructure. In the article I’ve linked Florian draws some solid points about their experience with immutable infrastructure. Some of the key features Florian details include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;State Isolation&lt;/li&gt;
&lt;li&gt;Atomic Deployments and Validation&lt;/li&gt;
&lt;li&gt;Fast Recovery by Preserving History&lt;/li&gt;
&lt;li&gt;Simple Experimentation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of these are valid reasons to go with an immutable infrastructure design practice. Florian also puts together some great links &amp;amp; reference material at the end of the article too.&lt;/p&gt;
&lt;h2 id=&quot;summary-&quot;&gt;Summary…&lt;/h2&gt;
&lt;p&gt;So these are reasonable good reads on immutable infrastructure, something, that if you’re in charge of any type of application deployment will benefit from in some significant ways. So learn up, and feel free to ping me for further discussion on twitter &lt;a href=&quot;https://twitter.com/adron&quot; target=&quot;_blank&quot;&gt;@Adron&lt;/a&gt;. Cheers!&lt;/p&gt;
</description>
    </item>
    <item>
      <title>The Difficult Open Source Path</title>
      <link>http://adron.github.io/articles/the-difficult-open-source-path/</link>
      <pubDate>Thu, 24 Mar 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/the-difficult-open-source-path/</guid>
      <author></author>
      <description>&lt;p&gt;Bringing a closed source, or just simply an internally managed code base, into the wild of open source software can be an arduous and surreal process. In this article I’m going to ramble on about exactly that, with a few learned lessons and key successes I’ve had.&lt;/p&gt;
&lt;p&gt;I’m currently helping the Home Depot Quote Center determine what is useful software to open source, and then helping them move toward open sourcing that software. In the past I’ve managed the open source development of .NET Extensions of Cloud Foundry, called Iron Foundry, which provided .NET support to the Cloud Foundry Platform. I’ve also helped organize and run open source efforts for plugins at New Relic, Basho, and a host of other smaller companies. Sometimes I’ve been a code contributor, sometimes I’m just interacting with contributors and managing pull requests. Either way it has been a lot of fun and every time it has been a seriously intense learning opportunity.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&quot;lesson-1-open-source-amp-individual-freedom&quot;&gt;Lesson 1: Open Source &amp;amp; Individual Freedom&lt;/h2&gt;
&lt;p&gt;One thing to keep in mind, which I realize, but find myself being reminded of, is that people are truly free to either contribute, use, or completely disregard or ignore your open source project. The analogy of herding cats is often used to describe software development, and open source software development is like herding cats hopped up on a bunch of catnip that whimsically decide to do whatever they want.&lt;/p&gt;
&lt;p&gt;Of course, an open source project might have paid contributors. If a project has paid contributors we at least get back to a contained room of cat herding. But either way, never forget that someone may or may not build that feature, or close the issue, or submit a pull request the way you’ve set out to have the project run. Which brings me to the next lesson.&lt;/p&gt;
&lt;h2 id=&quot;lesson-2-write-up-roles-rules-process-guidelines&quot;&gt;Lesson 2: Write Up Roles, Rules, Process, &amp;amp; Guidelines&lt;/h2&gt;
&lt;p&gt;As soon as the team goes from one person to two, effort should immediately be put into creating roles, rules, and process for how contributions will be accepted, pull requests will be committed, how to submit or work on issues, and the whole host of work flow associated with getting things done for the project.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Roles&lt;/strong&gt;, in this particular instance, can be broken down in different ways. Sometimes a project might have somebody managing the pull requests coming in, someone else or even several people are managing the product development issues for new features, another person might be handing bug issues that come up, and the possibilities continue. Some simple examples often look like this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Project Leader - (Manager, Boss, Head Honcho, or whatever the title) would be in charge of and might even be the person who started the project.&lt;/li&gt;
&lt;li&gt;Contributor - Individual submitting features via pull request to the project.&lt;/li&gt;
&lt;li&gt;Feature Creator - Individual submitting feature requests and ideas via issues listings.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Slightly more complex examples might be something like this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Project Creator - Again, the person who created, started, and owns the project.&lt;/li&gt;
&lt;li&gt;Feature Architect - Some who specifically designs features from a technical stand point.&lt;/li&gt;
&lt;li&gt;Feature User Experience - Someone who works with users of the OSS project to determine how and in which ways the community is using the project and determine ways to make the experience better.&lt;/li&gt;
&lt;li&gt;Feature Contributor - Someone who contributes code for features, implementing based on contributor specs, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Beyond that, one just merely needs to detail the roles as much as necessary to help people determine what and how they’ll be contributing to the project.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Rules&lt;/strong&gt; for a project can cover a wide range of things. One increasingly popular and sometimes useful thing to add, especially with a diverse group of people working on a project, is a basic code of conduct. This helps outline what is or is not appropriate behavior on the issue threads and general public conversation within the group. We have to remember that open source often has people involved that aren’t exactly employees or directly related to the person that started a project. Because of this individuals often come to a project without any particular guidelines about what is or isn’t appropriate behavior.&lt;/p&gt;
&lt;p&gt;Other rules that are dramatically simpler and easier to deal with, are breaking down and defining what is considered an acceptable pull request, how things should be documented, code standards, and other related technical rules.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Process&lt;/strong&gt; for a project is often key to keeping people involved over time. Without a good process in which contributors really feel like they’re part of the team and getting their pull requests accepted, things can fall apart pretty quickly. Nothing like a bored programmer to go find something else to do that has nothing to do with your open source project!&lt;/p&gt;
&lt;p&gt;A good process helps to define the steps that a contributor would need to go through to contribute a piece of code to a feature, who they would need to communicate with, how to submit a pull request, and finally how to wrap up getting the pull request pulled from the latest code. This is as important to people and it is to defining the technical steps for the system itself to be sustaining from an ongoing continuous integration and deployment point of view.&lt;/p&gt;
&lt;p&gt;Once these core things are formalized it dramatically decreases tedious communication about working through the most basic of tasks while working on a project.&lt;/p&gt;
&lt;h2 id=&quot;lesson-3-branding-amp-marketing&quot;&gt;Lesson 3: Branding &amp;amp; Marketing&lt;/h2&gt;
&lt;p&gt;“Oh my god what are you talking about Adron, what’s that crap got to do with an open source project?” I can hear the naysayers immediately on this topic. But rest assured, branding and marketing will either make or break a project. If you’re repo is kind of clunky and cluttered it sends a bad message that you aren’t really paying attention to your project. If someone comes to your repo and immediately sees a reasonable logo, or some type of consistent README.md with useful information and messaging (that’s marketing by the way) about what, where, how, and why this project exists, you’re exponentially more likely to get people involved in contributing and even more dramatically more likely to get people using the project.&lt;/p&gt;
&lt;p&gt;In the OSS Manifesto a baseline of files are suggested for an OSS project:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Have a readme file&lt;/li&gt;
&lt;li&gt;Have a contributing file&lt;/li&gt;
&lt;li&gt;List all core team members in the readme file&lt;/li&gt;
&lt;li&gt;Have a license file&lt;/li&gt;
&lt;li&gt;Have a changelog&lt;/li&gt;
&lt;li&gt;Follow semantic versioning&lt;/li&gt;
&lt;li&gt;Tag all major releases&lt;/li&gt;
&lt;li&gt;Provide documentation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I’ll add to this, throw in an &lt;em&gt;.svg or reasonably usable &lt;/em&gt;.png of a logo or some easily identifiable symbol for the project. Every major project has some sort of logo, it really doesn’t even matter if its a pretty lousy looking logo, it just needs to be there to make the project easily identifiable.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/the-difficult-open-source-path/open-source-logos.png&quot; alt=&quot;Open Source logos&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;lesson-4-the-software-needs-to-work&quot;&gt;Lesson 4: The Software Needs to Work&lt;/h2&gt;
&lt;p&gt;Having the respective readme, contributing file, general doc, listing of all core members; these things I’ve listed so far are all nice but there’s one more thing I’ve not mentioned yet. That is having a working publicly accessible &lt;strong&gt;&lt;em&gt;continuous integration&lt;/em&gt;&lt;/strong&gt; build that is working. Any and every open source project should have a repository setup with a running build. Any new pull requests gets accepted or even the smallest commit should get a build started.&lt;/p&gt;
&lt;p&gt;There are many ways, more so for open source projects than probably any other kind, to get a continuous integration build going. Check out products and services like &lt;a href=&quot;https://codeship.com/&quot; target=&quot;_blank&quot;&gt;Codeship&lt;/a&gt;, &lt;a href=&quot;https://www.jetbrains.com/teamcity/&quot; target=&quot;_blank&quot;&gt;TeamCity&lt;/a&gt;, &lt;a href=&quot;https://www.appveyor.com/&quot; target=&quot;_blank&quot;&gt;Appveyor&lt;/a&gt;, or &lt;a href=&quot;https://travis-ci.org/&quot; target=&quot;_blank&quot;&gt;Travis CI&lt;/a&gt;. These are just a few of the many options to get a continuous integration setup running for your open source project.&lt;/p&gt;
&lt;h2 id=&quot;lesson-5-there-will-be-other-lessons-to-learn&quot;&gt;Lesson 5: There will be other lessons to learn&lt;/h2&gt;
&lt;p&gt;An open source project is a pretty wild ride of code chops, organizational skills, and keep systemic development sustainable for a project. It can be tough, but a lot of fun, and very rewarding.&lt;/p&gt;
&lt;p&gt;With that, happy hacking and stay tuned, there’s more to come!&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Docker Tips n' Tricks - Bash Things With Docker</title>
      <link>http://adron.github.io/articles/docker-tips-n-tricks-bash-things-with-docker/</link>
      <pubDate>Wed, 09 Mar 2016 16:00:00 -0800</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/docker-tips-n-tricks-bash-things-with-docker/</guid>
      <author></author>
      <description>&lt;p&gt;If you use Docker frequently, you’ve likely memorized a few repetitive commands…&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker-machine start XyZvirtualMachine
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then you run…&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker-machine env XyZvirtualMachine
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;…and then you type…&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;eval $(docker-machine env XyZvirtualMachine)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;One does this about a zillion times if there are multiple virtual machines or for other various reasons. I wanted to simplify this repetitive task so I wrote a bash function, thanks to a &lt;a href=&quot;http://stackoverflow.com/questions/35761480/scripting-docker-not-connected-after-running-script&quot; target=&quot;_blank&quot;&gt;fumble I posted on Stackoverflow&lt;/a&gt; and then an assist by my good friend Troy Howard (&lt;a href=&quot;https://twitter.com/thoward37&quot; target=&quot;_blank&quot;&gt;@thoward37&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;This quick hack consisted of this &lt;a href=&quot;https://gist.github.com/Adron/8dc06eb398f403225daa&quot; target=&quot;_blank&quot;&gt;Github gist&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gimmedocker() { if [ $1 ]; then
    docker-machine start $1
    docker-machine env $1
    eval $(docker-machine env $1)
    docker ps -a
fi }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Stick that in your ~/.bash_profile (or ~/.bashrc if you’re on *nix) and you’re good to go. Then at the bash prompt just type in this.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gimmedocker XyZvirtualMachine
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;BOOM! Less typing for the win!&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Researching &amp; Learning About Zookeeper - A Guide</title>
      <link>http://adron.github.io/articles/research-learning-about-zookeeper/</link>
      <pubDate>Mon, 01 Feb 2016 16:30:00 -0800</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/research-learning-about-zookeeper/</guid>
      <author></author>
      <description>&lt;p&gt;I’ve started working with Zookeeper. Since I’ve started doing that I’ve put together this blog post. It’s aim is to provide a structured approach to learning Zookeeper and researching the elements that make its features tick. Along the way I have a few call outs to people that have also provided excellent talks, material, or contributions to learning about Zookeeper along the way. With that, let’s get started.&lt;/p&gt;
&lt;p&gt;Zookeeper is a consensus system written based on ideas presented via consensus algorithms. The idea is key value stores that keep all of their data in memory for read heavy workloads. The qualities in this context present a system that is highly consistent, with intent for access from distributed systems to data that won’t be lost.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&quot;start-learning&quot;&gt;Start Learning&lt;/h3&gt;
&lt;p&gt;The starting point should be a complete read of the &lt;a href=&quot;https://zookeeper.apache.org/&quot;&gt;Apache Zookeeper Project Home Page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;At this point I took an administrators’ angle on determining what I needed to know and do next. I knew that my situation would meet the basic assumptions of reliability around Zookeeper; First is that only a minority of servers in a deployment would fail at a particular time or become inaccessible from a crash, partition, or related issue, and second is that deployed machines would have correctly operating clocks, storage, and network components that perform consistently.&lt;/p&gt;
&lt;p&gt;I had also made an assumption that I would need &lt;em&gt;&lt;strong&gt;2 x F + 1&lt;/strong&gt; &lt;/em&gt;machines in order to maintain data consistency. The F here is the number of failed or inaccessible machines. This meant that if I wanted to have 2 failures, I’d need at least 5 machines. For a failure of up to 3 machines, that would be 7 machines. Pretty easy, just a little simple math.&lt;/p&gt;
&lt;p&gt;The other thing I was curious about, especially on a single machine, would be Zookeeper’s overall overhead. Would it come into contention with the services that are already running? Would it be ok to put Zookeeper on the machines that run the micro-services that Zookeeper is providing information to? Well, Zookeeper does indeed content with other application for CPU, network, memory, and storage. For this reason I have to balance the deployment of Zookeeper in relation to the other applications, as my server loads may not be super high, and thus I’d be able to have Zookeeper on some of the servers that have actual other services deployed. But YMMV depending on your services you’ve got deployed.&lt;/p&gt;
&lt;p&gt;While I was thinking through how I’d build out the architecture for my implementation of Zookeeper I came upon a very important note in the documentation,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“ZooKeeper’s transaction log must be on a dedicated device. (A dedicated partition is not enough.) ZooKeeper writes the log sequentially, without seeking Sharing your log device with other processes can cause seeks and contention, which in turn can cause multi-second delays.&lt;/p&gt;
&lt;p&gt;Do not put ZooKeeper in a situation that can cause a swap. In order for ZooKeeper to function with any sort of timeliness, it simply cannot be allowed to swap. Therefore, make certain that the maximum heap size given to ZooKeeper is not bigger than the amount of real memory available to ZooKeeper. For more on this, see Things to Avoid below.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;After reading up on the following documentation it seemed like a good time to do a test deployment:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zookeeper.apache.org/doc/trunk/zookeeperAdmin.html&quot; target=&quot;_blank&quot;&gt;Zookeeper Admin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zookeeper.apache.org/doc/trunk/zookeeperAdmin.html#sc_minimumConfiguration&quot; target=&quot;_blank&quot;&gt;Zookeeper Minimum Configuration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;begin-bug-description-1st-docker-attempt&quot;&gt;BEGIN BUG DESCRIPTION: 1ST DOCKER ATTEMPT&lt;/h4&gt;
&lt;p&gt;NOTE: If you just want to get to the Zookeeper installation &amp;amp; setup and skip this issue, GOTO &lt;a href=&quot;#awsInstallation&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;My first go was to pull up a clean Ubuntu docker image and prep it as a container. Then start installing the necessary parts of Zookeeper. These steps consisted of the following. I made a video for it (see toward the bottom of this entry), so you can actually see the flow and I also wrote the commands I’m tying in bash below. Then you can pick your preferred use.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker-machine start fusion-fire
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Docker machine starts my virtual machine on OS-X that runs the Docker daemon, which I’ve named fusion-fire, thus the command above. Then after that I pulled down an Ubuntu image, started a container from the image, connecting to the container and all set for installation.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker pull ubuntu
docker run -it ubuntu
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;To install the Zookeeper server and begin execution I then issued the following.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get update
sudo apt-get -Y install default-jdk
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;While this was executing I also ran into a situation where the Java Development Kit was hanging on getting the certificates put into place.&lt;/p&gt;
&lt;p&gt;&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;The last dozen or so &lt;a href=&quot;https://twitter.com/hashtag/Ubuntu?src=hash&quot;&gt;#Ubuntu&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/docker?src=hash&quot;&gt;#docker&lt;/a&gt; images I&amp;#39;ve tried to run &amp;quot;sudo apt-get install default-jre&amp;quot; on have all ended up spiking the CPU.&lt;/p&gt;&amp;mdash; Λdrøn (@Adron) &lt;a href=&quot;https://twitter.com/Adron/status/693219719441096704&quot;&gt;January 29, 2016&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;
&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;I began looking into this problem, and found currently on Ubuntu 14.04, running sudo-apt-get update and then running the install will trigger the bug. Two other points of reference are &lt;a href=&quot;https://github.com/docker/docker/issues/18180&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;, &lt;a href=&quot;https://bugs.launchpad.net/ubuntu/+source/ca-certificates-java/+bug/1396760&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;, and there are other postings and issues related to the issue, just google. So what I did at that point to fix this issue was the following.&lt;/p&gt;
&lt;p&gt;First I forcefully killed the docker container by just restarting the whole docker VM.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker-machine stop fusion-fire
docker-machine start fusion-fire
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Once that stopped I then started the virtual machine again.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get -y install default-jre
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;When it started I ran sudo apt-get install again. At that point apt-get attempted to recover but the install kept getting stuck on registering the certificates. So I gave up on this avenue for now. Hopefully a future Docker &amp;amp; Linux Kernal fixes the problem. So instead I went out and just spooled up some AWS instances for now, I’ll update this blog entry with a “Part II: Docker is Zookeeper Fixed” when the Java + Linux Kernal + Docker issue is remedied, until then, here’s the installation process on the AWS instances.&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;awsInstallation&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;end-bug-description-aws-instance-zookeeper-installation&quot;&gt;END BUG DESCRIPTION: AWS Instance Zookeeper Installation&lt;/h3&gt;
&lt;p&gt;Once this was setup I started 5 nano instances for Zookeeper (nano, since it’s just a test example for learning) and then logged in using broadcast with iTerm 2. From there each instance had the following commands executed.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get update
sudo apt-get install -y default-jdk
cd /opt/
sudo mkdir zookeeper
cd zookeeper/
sudo wget http://mirror.tcpdiag.net/apache/zookeeper/zookeeper-3.4.6/zookeeper-3.4.6.tar.gz
sudo tar -zxvf zookeeper-3.4.6.tar.gz
cd conf/
sudo nano zoo.cfg
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;NOTE: Nano is the text editor I used above for “sudo nano zoo.cfg”. If you don’t have it available just install it with “sudo apt-get install nano”.&lt;/p&gt;
&lt;p&gt;In that zoo.cfg I entered the following. For the IPs I actually used the AWS private IPs for the config file example below.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;tickTime=2000
dataDir=/var/zookeeper
clientPort=2181
initLimit=5
syncLimit=2
server.1=172.31.19.66:2888:3888
server.2=172.31.19.67:2888:3888
server.3=172.31.19.68:2888:3888
server.4=172.31.19.69:2888:3888
server.5=172.31.19.70:2888:3888&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now I started the service using the zkServer.sh script file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo /opt/zookeeper/zookeeper-3.4.6/bin/zkServer.sh start-foreground
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;When I booted up I ran into an error about the myid file, so I added the file with a sequential number for the byid in the /var/zookeeper directory.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo nano /var/zookeeper/myid
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In each of the files I added a number, respectively 1 through 5 for the id of each and saved those files. Upon attempting to start the zookeeper service with the following command I finally got to see the various nodes in the ensemble gain access to each other and start working. Which, I gotta admit, was a pretty damn cool feeling.&lt;/p&gt;
&lt;p&gt;After all that fussing it seemed good to note, especially since they’re hard to find in the documentation (which is kind of a bit hard to use), here are some of the switches for zkServer.sh.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;start
start-foreground (super useful for debugging)
stop
restart
status
upgrade
print-cmd&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Once this is done, restart the service but this time instead of using the start-foreground command, just use the start command and that will start the service and return the bash back to you to issues commands or whatnot. An easy way to test out Zookeeper now that it is running is to use the Zookeeper CLI. This is the zkCli.sh shell script (or zkcli.bat file if you’re running it on windows - which I’d strongly suggest NOT to do).&lt;/p&gt;
&lt;p&gt;Ok, that’s it for this entry. More to come in the near future. Cheers!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Excellent Additional References&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a title=&quot;raft&quot; href=&quot;https://compositecode.files.wordpress.com/2016/01/raft.pdf&quot;&gt;In Search of an Understandable Consensus Algorithm (Extended Version)&lt;/a&gt; - Diego Ongaro &amp;amp; John Ousterhout @ Stanford University&lt;/li&gt;
&lt;li&gt;&lt;a title=&quot;paxos-simple&quot; href=&quot;https://compositecode.files.wordpress.com/2016/01/paxos-simple.pdf&quot;&gt;Paxos Made Simple&lt;/a&gt; by Leslie Lamport&lt;/li&gt;
&lt;li&gt;Camille Fournier (&lt;a href=&quot;https://twitter.com/skamille&quot; target=&quot;_blank&quot;&gt;@skamille&lt;/a&gt;) provided an excellent talk about &lt;a href=&quot;http://www.infoq.com/interviews/fournier-consensus&quot; target=&quot;_blank&quot;&gt;Zookeeper (Consensus Systems) on InfoQ&lt;/a&gt;. In this talk Camille also mentions the &lt;a title=&quot;chubby-osdi06&quot; href=&quot;https://compositecode.files.wordpress.com/2016/01/chubby-osdi06.pdf&quot;&gt;The Chubby Lock Service for Loosely Coupled Distributed Systems&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://youtu.be/j4uwKP7WJFk&quot; target=&quot;_blank&quot;&gt;Zookeeper for the Skeptical Architect by Camille Fournier&lt;/a&gt; - RICON East 2013
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/j4uwKP7WJFk?rel=0&amp;amp;showinfo=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
Talks about why Riak, Cassandra, and even the company Camille works at (Rent the Runway) doesn’t use Zookeeper. An interesting talk from the regard of why not to use it in some cases.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Docker Tips n' Tricks - Delete All The Images &amp; Containers</title>
      <link>http://adron.github.io/articles/docker-tips-n-tricks-delete-all-the-images-containers/</link>
      <pubDate>Sun, 01 Nov 2015 16:00:00 -0800</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/docker-tips-n-tricks-delete-all-the-images-containers/</guid>
      <author></author>
      <description>&lt;p&gt;Two simple commands that’ll wipe your installation clean of images and containers.&lt;/p&gt;
&lt;p&gt;Deletes all containers&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker rm $(docker ps -a -q)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Deletes all images&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker rmi $(docker images -q)
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
  </channel>
</rss>