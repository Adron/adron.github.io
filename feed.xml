<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Adron's Composite Code</title>
    <atom:link href="http://adron.github.io/feed.xml" rel="self" type="application/rss+xml"></atom:link>
    <link>http://adron.github.io</link>
    <description>Coder, Messenger, Recon, Infrastructure</description>
    <pubDate>Mon, 06 Jun 2016 17:00:00 -0700</pubDate>
    <generator>Wintersmith - https://github.com/jnordberg/wintersmith</generator>
    <language>en</language>
    <item>
      <title>Get JavaScript Running on a $2 WiFi-Enabled Device by Andrew Chalkley</title>
      <link>http://adron.github.io/articles/node-pdx-2016-speaker-andrew-chalkley/</link>
      <pubDate>Mon, 06 Jun 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-speaker-andrew-chalkley/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://nodepdx.org&quot;&gt;&lt;img src=&quot;/articles/node-pdx-2016-speaker-andrew-chalkley/nodepdx-2016-logo.png&quot; alt=&quot;Node PDX 2016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;image float-right&quot;&gt;
    &lt;img src=&quot;/articles/node-pdx-2016-speaker-andrew-chalkley/andrew.jpg&quot; alt=&quot;Andrew Chalkley&quot;&gt;
&lt;/div&gt;

&lt;p&gt;Andrew Chalkley is a full-time teacher at online education provider Treehouse. He’s a polyglot programmer with a passion for hardware. Andrew’s posts on the hardware platform Arduino have been featured in Hacker Monthly and used in higher educational institutions around the world. He’s also lectured at University on JavaScript and the Internet of Things.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The ESP8266 is a very popular Internet of Things device, because of it’s price and availability. You can program it with Arduino, Python and even JavaScript. Using JavaScript on a small device doesn’t have to be difficult. Andrew will show you the easiest way to install JavaScript on am Internet of Things device and how to run your JavaScript applications on it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Blog: &lt;a href=&quot;http://forefront.io&quot;&gt;http://forefront.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Company: &lt;a href=&quot;http://teamtreehouse.com&quot;&gt;http://teamtreehouse.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github: &lt;a href=&quot;http://github.com/chalkers&quot;&gt;http://github.com/chalkers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Flasher.js: &lt;a href=&quot;http://github.com/thingssdk/flasher.js&quot;&gt;http://github.com/thingssdk/flasher.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>node pdx 2016 speaker david manning adam ulvi</title>
      <link>http://adron.github.io/articles/node-pdx-2016-speaker-david-manning-adam-ulvi/</link>
      <pubDate>Mon, 06 Jun 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-speaker-david-manning-adam-ulvi/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://nodepdx.org&quot;&gt;&lt;img src=&quot;/articles/node-pdx-2016-speaker-david-manning-adam-ulvi/nodepdx-2016-logo.png&quot; alt=&quot;Node PDX 2016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;image float-right&quot;&gt;
    &lt;img src=&quot;/articles/node-pdx-2016-speaker-david-manning-adam-ulvi/davidadam.jpg&quot; alt=&quot;David Manning &amp;amp; Team&quot;&gt;
&lt;/div&gt;

&lt;p&gt;This is a very Portland, very unique to Node PDX talk, by Adam and David who work at ZHealth Documentation and have opinions about things.&lt;/p&gt;
&lt;p&gt;Nuff’ said eh!&lt;/p&gt;
&lt;p&gt;Despite having no formal construction experience, Adam and David have been tasked
with designing a new bike shed outside of the Olympic Mills Commerce Center. They have spent long hours in extensive research, and are excited to share their results with the community.&lt;/p&gt;
&lt;p&gt;Attendees will receive plans and a Starter Kit of building materials.&lt;/p&gt;
&lt;p&gt;For more important information about what a bike is, what a shed is, and how these two things combined make bike sheds, check out this useful links.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bikes: &lt;a href=&quot;https://en.wikipedia.org/wiki/Bicycle&quot;&gt;https://en.wikipedia.org/wiki/Bicycle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Sheds: &lt;a href=&quot;https://en.wikipedia.org/wiki/Shed&quot;&gt;https://en.wikipedia.org/wiki/Shed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Bike Sheds: &lt;a href=&quot;https://en.wikipedia.org/wiki/Law_of_triviality&quot;&gt;https://en.wikipedia.org/wiki/Shed#Specific-use_sheds&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>How to Electron by Blaine Schmeisser</title>
      <link>http://adron.github.io/articles/node-pdx-2016-speaker-blaine-schmeisser/</link>
      <pubDate>Sun, 05 Jun 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-speaker-blaine-schmeisser/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://nodepdx.org&quot;&gt;&lt;img src=&quot;/articles/node-pdx-2016-speaker-blaine-schmeisser/nodepdx-2016-logo.png&quot; alt=&quot;Node PDX 2016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;image float-left&quot;&gt;
    &lt;img src=&quot;/articles/node-pdx-2016-speaker-blaine-schmeisser/blainesch.jpg&quot; alt=&quot;Blaine Schmeisser&quot;&gt;
&lt;/div&gt;

&lt;p&gt;I’m happy to introduce Blaine Schmeisser. He’s a recent Portland transplant currently working as a Senior Software Engineer at New Relic. He has a passion for building and shipping software and an advocate for pair programming. Outside of tech, Blaine spends his free time with his dog and maintains a simplistic, eco-friendly lifestyle.&lt;/p&gt;
&lt;p&gt;Blaine’s “How to Electron” answers questions you have about building user interface applications with JavaScript. Have you ever wanted to build desktop apps with web technology you already know? If you’ve never heard of Electron or just want to learn more about it, this talk will cover what Electron is and how to utilize it to create powerful tools like Atom and Slack. You will learn the history of Electron, how to get started, the trade-offs of picking various boiler plates, and the unique Electron specific APIs that are vital to being a Electron developer.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GitHub: &lt;a href=&quot;https://github.com/blainesch&quot;&gt;https://github.com/blainesch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Twitter: &lt;a href=&quot;https://twitter.com/blainesch&quot;&gt;https://twitter.com/blainesch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Website: &lt;a href=&quot;http://blainesch.com&quot;&gt;http://blainesch.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Demystifying TypeScript Decorators by James Churchill</title>
      <link>http://adron.github.io/articles/node-pdx-2016-speaker-james-churchill/</link>
      <pubDate>Sun, 05 Jun 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-speaker-james-churchill/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://nodepdx.org&quot;&gt;&lt;img src=&quot;/articles/node-pdx-2016-speaker-james-churchill/nodepdx-2016-logo.png&quot; alt=&quot;Node PDX 2016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;image float-right&quot;&gt;
    &lt;img src=&quot;/articles/node-pdx-2016-speaker-james-churchill/james-churchill-nyc.jpg&quot; alt=&quot;James Churchill&quot;&gt;
&lt;/div&gt;

&lt;p&gt;Portlander James has worked extensively with a variety of technologies, including ASP.NET MVC, SQL Server, JavaScript, TypeScript, Knockout.js, and AngularJS. James, a self-confessed geek, enjoys talking about programming and learning new technologies. He recently joined the Treehouse team as a teacher and is excited to have the opportunity to help beginners become developers.&lt;/p&gt;
&lt;p&gt;James also enjoys participating in the greater Cascadian Developer Community, presenting talks in Portland, Seattle, Salt Lake City, Boise, Eugene, Salem, and Hood River. Last April, James started and co-organized the Portland TypeScript Meetup (&lt;a href=&quot;http://typescriptpdx.com/&quot;&gt;http://typescriptpdx.com/&lt;/a&gt; which is an awesome meetup, come check it out sometime!).&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;When he is not working, he can be found skiing with his wife and kids, remodeling the house, playing music with his band, or hanging out in the yard with his chickens.&lt;/p&gt;
&lt;p&gt;In “Demystifying TypeScript Decorators” will show us TypeScript decorators, based on the ES2016 decorator proposal and introduced as part of TypeScript 1.5, provide developers with a way to modify a JavaScript class, property, method, or method parameter using a convenient declarative syntax. We’ll start this session by creating our own decorator, to see firsthand how they work. Then, we’ll take a look at how decorators can be used in a variety of settings.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Blog: &lt;a href=&quot;http://smashdev.com&quot;&gt;http://smashdev.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github: &lt;a href=&quot;http://github.com/smashdevcode&quot;&gt;http://github.com/smashdevcode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Twitter: &lt;a href=&quot;http://twitter.com/SmashDev&quot;&gt;http://twitter.com/SmashDev&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>The SAM Pattern - a distributed system view of Front-End architectures by Jean-Jacques Dubray</title>
      <link>http://adron.github.io/articles/node-pdx-2016-speaker-jean-jacques-dubray/</link>
      <pubDate>Sat, 04 Jun 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-speaker-jean-jacques-dubray/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://nodepdx.org&quot;&gt;&lt;img src=&quot;/articles/node-pdx-2016-speaker-jean-jacques-dubray/nodepdx-2016-logo.png&quot; alt=&quot;Node PDX 2016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;image float-left&quot;&gt;
    &lt;img src=&quot;/articles/node-pdx-2016-speaker-jean-jacques-dubray/jj-sized.png&quot; alt=&quot;Jean-Jacques Dubray&quot;&gt;
&lt;/div&gt;

&lt;p&gt;Jean-Jacques Dubray is the founder of &lt;a href=&quot;http://xgen.io&quot;&gt;xgen.io&lt;/a&gt; and &lt;a href=&quot;http://www.gliiph.com&quot;&gt;gliiph&lt;/a&gt;. He has been building Service Oriented Architectures,
and API platforms for the last 15 years. He is a former member of the research staff at HRL and earned his Ph.D. from
the University of Provence (Luminy campus), home of the Prolog language. He is the inventor of the &lt;a href=&quot;http://www.xgenio.com/bolt-introduction.pdf&quot;&gt;BOLT methodology&lt;/a&gt; and the SAM pattern.&lt;/p&gt;
&lt;p&gt;In his talk Jean-Jacques Dubray presents that Web Applications are rapidly becoming sophisticated distributed systems. When you look at a Facebook page or a Netflix catalog,
the number of components interacting with each other requires complex synchronization and state management capabilities, reaching
the limits of the MVC pattern.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;In the last couple of years, several reactive architectures have started to get some interest (React, Cycle.js, ELM) without
generating significant traction (compared to established frameworks like Angular), while struggling to position effects in their
programming model. A new reactive, functional pattern, the State-Action-Model pattern (SAM) was introduced in early 2016 on the
foundation of TLA+ semantics.&lt;/p&gt;
&lt;p&gt;The pattern, which is unapologetically driven by simplicity, promotes a clear delineation between the business logic and the view
and challenges the complexity of frameworks like Google’s Angular or Facebook’s React/Redux.&lt;/p&gt;
&lt;p&gt;SAM’s unidirectional flow is also challenging interactive patterns like BFF (Back-End for Front-End) or the Vertical Slice Pattern
which suggest creating view-specific APIs, per platform, app, versions of an app…&lt;/p&gt;
&lt;p&gt;We’ll start by reviewing some of the key challenges of modern UX and Front-End Architectures. We will then present the
key concepts of SAM and walk the audience through some node.js code samples (including server-side TimeTravel).&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Modern Javascript Frameworks - Introduction to Ember.JS and Ember-CLI by Suchita Doshi</title>
      <link>http://adron.github.io/articles/node-pdx-2016-suchita-doshi/</link>
      <pubDate>Sat, 04 Jun 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-suchita-doshi/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://nodepdx.org&quot;&gt;&lt;img src=&quot;/articles/node-pdx-2016-suchita-doshi/nodepdx-2016-logo.png&quot; alt=&quot;Node PDX 2016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;image float-right&quot;&gt;
    &lt;img src=&quot;/articles/node-pdx-2016-suchita-doshi/suchita-doshi.jpg&quot; alt=&quot;Suchita Doshi&quot;&gt;
&lt;/div&gt;

&lt;p&gt;Suchita is UI Lead for the analytics module of Yahoo Admanager Plus team and Core member of Emberjs group @Yahoo, Speaker at Women Who code organization (Introduction To Emberjs/Ember CLI), Conducted Webinar for the TenXList members on EmberJS. She’s passionate about improving developers ergonomics and a hardcore “cricket” fan.&lt;/p&gt;
&lt;p&gt;In other Suchita news, she’s opening bats-woman for the Bay Area Cricket Association team! 😀&lt;/p&gt;
&lt;p&gt;Suchita describes her talk as “There will never be a “one size fits all” approach to web development. If you want your application to be minimally interactive, then server side rendered HTML would be the way to go, else, if it were a more interactive application, then client side framework would benefit you.
Why not use just JQuery instead of adopting these Modern Javascript Frameworks? Think about it! If your application has interactivity on the lighter side, then JQuery would work well, but as soon as you introduce more states in your application, it would then become messier and heavier on the DOM. You would need to use the ‘data-‘ attributes to store the data in your DOM and also remember how to map them with the triggered events.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Here is where client side frameworks come to the rescue. I have worked on several client side frameworks like Backbone.js, Ember.js. Few of the many features I love about Ember.js are the two-way data binding, Computed Properties, the run loop, convention over configuration nature, ease of handling routing and many more.
In this talk I would be covering the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Introduction to Emberjs and why Ember&lt;/li&gt;
&lt;li&gt;How Ember js makes a difference&lt;/li&gt;
&lt;li&gt;Ember convention over configuration nature&lt;/li&gt;
&lt;li&gt;Introduction to Ember routes, components and templates&lt;/li&gt;
&lt;li&gt;Introduction to Ember CLI&lt;/li&gt;
&lt;li&gt;Computed Properties&lt;/li&gt;
&lt;li&gt;Live Demo on how it’s really intuitive in a couple of non-trivial scenarios.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So basically my goal is to attract more developers to adapt modern javascript frameworks and make a difference in the way complex apps are built.”&lt;/p&gt;
</description>
    </item>
    <item>
      <title>MMOWAM - Build Server-less Games with a DSN by Josh Marinacci</title>
      <link>http://adron.github.io/articles/node-pdx-2016-speaker-josh-marinacci/</link>
      <pubDate>Fri, 03 Jun 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-speaker-josh-marinacci/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://nodepdx.org&quot;&gt;&lt;img src=&quot;/articles/node-pdx-2016-speaker-josh-marinacci/nodepdx-2016-logo.png&quot; alt=&quot;Node PDX 2016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;image float-left&quot;&gt;
    &lt;img src=&quot;/articles/node-pdx-2016-speaker-josh-marinacci/josh-marinacci.jpg&quot; alt=&quot;Josh Marinacci&quot;&gt;
&lt;/div&gt;

&lt;p&gt;Josh is an O’Reilly author, developer advocate, and recovering engineer. He is
currently head of the developer evangelism team at PubNub. Previously he worked
as a UI researcher at Nokia, and a developer advocate at Palm and Sun. He is
passionate about user interfaces and education. Josh lives in sunny Eugene,
Oregon.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Josh will be talking about building a multiplayer casual game for fun. Well, it’s fun until you have to write a server
component to run it. Now you have to implement game matching, keeping clients in
sync, in game chat, score tracking and more. In this Josh will show you how to
use a Data Stream Network (DSN) write a game without any server at all. The
network itself can connect users, load clients, and keep everything in sync
without having to learn distributed computing programming. Josh will build and
play a MMOWAM (Massively Multiplayer Online Whack-A-Mole) game to show how easy
it can be.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;game MMOWAM (whack-a-mole)&lt;/li&gt;
&lt;li&gt;show mini version of each player on dashboard&lt;/li&gt;
&lt;li&gt;show current score / level&lt;/li&gt;
&lt;li&gt;show how much is left&lt;/li&gt;
&lt;li&gt;random number syncing to ensure everyone has the same board&lt;/li&gt;
&lt;li&gt;use a random channel w/ tiny UID to let anyone join&lt;/li&gt;
&lt;li&gt;show number of players&lt;/li&gt;
&lt;li&gt;start when 4 players in? one player hit’s start? let all player see total count as well and status of the other players&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>WebSockets Bring Light at the End of the Tunnel by Joel Lord</title>
      <link>http://adron.github.io/articles/node-pdx-2016-speaker-joel-lord/</link>
      <pubDate>Fri, 03 Jun 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-speaker-joel-lord/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://nodepdx.org&quot;&gt;&lt;img src=&quot;/articles/node-pdx-2016-speaker-joel-lord/nodepdx-2016-logo.png&quot; alt=&quot;Node PDX 2016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;image float-left&quot;&gt;
    &lt;img src=&quot;/articles/node-pdx-2016-speaker-joel-lord/joel-lord.jpg&quot; alt=&quot;Joel Lord&quot;&gt;
&lt;/div&gt;

&lt;p&gt;As a Development Manager, Joel’s motivation and proven technical prowess makes him a key member of Spiria’s software development team. With a degree in computational astrophysics, his interests eventually made their way to software and Web design. Today, his knowledge of JavaScript lets him to support a variety of projects on both the front end and back end. As we move into the age of the Internet of Things, Joel is ready with his passion for programming node bots and experimenting with gadgets.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Joel is going to speak on Web Sockets and tunnels of light… or to describe it more specifically more and more, people seem to be obsessed with real-time data.  But what does real-time mean in the world of REST servers and one-way communication?  Most modern web applications are now either displaying a snapshot of data at a given time or use a polling mechanism to update series of data at a given interval.
In this talk, you will learn about the power of WebSockets and how they can (and should!) be used in your modern web applications. In these 30 minutes, I will go through the process of building a Node server that can push data to multiple clients in real-time.  You will see how this can be easy using the socket.io library.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>The Web Platform is the Universal Instrument by Ben Michel</title>
      <link>http://adron.github.io/articles/node-pdx-2016-speaker-ben-michel/</link>
      <pubDate>Thu, 02 Jun 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-speaker-ben-michel/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://nodepdx.org&quot;&gt;&lt;img src=&quot;/articles/node-pdx-2016-speaker-ben-michel/nodepdx-2016-logo.png&quot; alt=&quot;Node PDX 2016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;image float-right&quot;&gt;
    &lt;img src=&quot;/articles/node-pdx-2016-speaker-ben-michel/benmichel.jpg&quot; alt=&quot;Ben Michel&quot;&gt;
&lt;/div&gt;

&lt;p&gt;Ben Michel has a pretty epic talk scheduled for Node PDX… if you don’t know Ben he’s a Musician–Developer. He composes &amp;amp; performs live soundtracks and cares a lot about community music.&lt;/p&gt;
&lt;p&gt;The talk he has planned for you all is described as, “Music as an idea, expression, commercial endeavor, and communal art is in its most volatile state since the European Renaissance. We’ve moved from the public adoption of recording technology, through the massive rise and fall of the recording industry, to a new age that was first seeded at Bell Labs during the Computer Science era.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Max Mathews encouraged a generation of computer musicians by declaring the Nyquist-Shannon “sampling theorem shows that there are really no limits to the sounds you can make…the computer is a universal musical instrument.”&lt;/p&gt;
&lt;p&gt;Now with a fuller understanding of what Mathews was implying, we can take it a step further and say that the Browser is the universal musical instrument. It’s the most accessible, cross-compatible runtime yet–and with the growth of Web Audio and Web MIDI standardization, we’re on the verge of a new renaissance in musical collaboration and interaction.&lt;/p&gt;
&lt;p&gt;Unfortunately, the promotion of individualism in our popular culture, and the divide between developers and working artists has kept us from realizing the potential of building useful tools for distributed music collaboration, even in the web platform.&lt;/p&gt;
&lt;p&gt;Still, I can see a world coming where community music and recorded works are not identified by regional boundaries, but distributed data regions and organic peer to peer networks. If the development of Web Audio and it’s supporting standards stabilize, music collaboration and exposition could be made available to everyone with no hinderances from age, class, or personal ability.&lt;/p&gt;
&lt;p&gt;The WebSound project is my iterative solution to this problem through long-term community engagement, and Audio/MIDI tool versioning.&lt;/p&gt;
&lt;p&gt;Our first endeavor is to build a few useful live performance tools enabling remote collaboration:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Real-time Web MIDI performances streamed to a live-event, enabling the performer to lead songs or compositions remotely. Achieved through an optimized VPN and P2P WebRTC DataChannels.&lt;/li&gt;
&lt;li&gt;Communally performed live music making with MIDI controlled WebAudio and WebSocket broadcasting.&lt;/li&gt;
&lt;li&gt;Audience interaction with the exposed parameters of a live band’s instrumentation–via broadcast methods and microcontroller installations.”&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>I Play the JavaScript by Matt McKegg</title>
      <link>http://adron.github.io/articles/node-pdx-2016-speaker-matt-mckegg/</link>
      <pubDate>Thu, 02 Jun 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-speaker-matt-mckegg/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://nodepdx.org&quot;&gt;&lt;img src=&quot;/articles/node-pdx-2016-speaker-matt-mckegg/nodepdx-2016-logo.png&quot; alt=&quot;Node PDX 2016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;image float-left&quot;&gt;
    &lt;img src=&quot;/articles/node-pdx-2016-speaker-matt-mckegg/mattmckegg.jpg&quot; alt=&quot;Matt McKegg&quot;&gt;
&lt;/div&gt;

&lt;p&gt;A JavaScript hacker and backyard musician and from Wellington, New Zealand. Lover of all things open and modular. I spend most of my time pressing buttons of various shapes, sizes and colours. Sometimes these buttons make sounds.&lt;/p&gt;
&lt;p&gt;Matt has been making music with computers for about 10 years, but once he tried to move from bedroom composing to live performance, he got incredibly frustrated at how hard it was to play computer music live. He decided to start working on his own live electronic performance software written in JavaScript that would let me play the way he wanted to play. 3 years later, it’s finally starting to become a reality.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Here is one of the Matt’s recent performances, for your viewing pleasure. &lt;/p&gt;
&lt;iframe width=&quot;1280&quot; height=&quot;720&quot; src=&quot;https://www.youtube.com/embed/L2BVDJWHdy0?rel=0&amp;amp;showinfo=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;</description>
    </item>
    <item>
      <title>The House Is Not On Fire - Building a home automation robot with Arduino, Raspberry Pi and Node.js by Artur Paikin</title>
      <link>http://adron.github.io/articles/node-pdx-2016-speaker-artur-paikin/</link>
      <pubDate>Wed, 01 Jun 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-speaker-artur-paikin/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://nodepdx.org&quot;&gt;&lt;img src=&quot;/articles/node-pdx-2016-speaker-artur-paikin/nodepdx-2016-logo.png&quot; alt=&quot;Node PDX 2016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;image float-right&quot;&gt;
    &lt;img src=&quot;/articles/node-pdx-2016-speaker-artur-paikin/art-stida.jpg&quot; alt=&quot;Artur Paikin&quot;&gt;
&lt;/div&gt;

&lt;p&gt;Artur describes himself as, “I’m a web developer and traveler. I write stories about my adventures in Russian and English on my site: &lt;a href=&quot;http://arturpaikin.com&quot;&gt;http://arturpaikin.com&lt;/a&gt; and run a small technology cooperative called &lt;a href=&quot;http://unebaguette.com&quot;&gt;Baguette&lt;/a&gt;, where I work on cool projects, currently building an ambitious next generation file uploader with &lt;a href=&quot;https://transloadit.com/&quot;&gt;Transloadit&lt;/a&gt;. I ride a &lt;a href=&quot;https://www.instagram.com/p/xC0qC2SSYb&quot;&gt;foldable bicycle&lt;/a&gt;, &lt;a href=&quot;http://unebaguette.com/web-course/&quot;&gt;teach&lt;/a&gt; web development and sometimes &lt;a href=&quot;https://www.instagram.com/p/4_6LO8ySVL/&quot;&gt;garden&lt;/a&gt; on the balcony.”&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Artur has built an open source home automation system called &lt;a href=&quot;https://github.com/arturi/kotihome&quot;&gt;Koti Home&lt;/a&gt; (Koti means home in Finnish language). It’s powered by an Arduino connected to Raspberry Pi, MQTT protocol for messaging, Node.js on the client and server, web sockets. You can interact with Koti robot via a React (like the cool kids do) control panel, Telegram Chat Bot and even your own voice.&lt;/p&gt;
&lt;p&gt;Arthur will talk about how he’s turned this project into reality — the tech he used and the challenges he faced. From a blinking LED to a voice controlled home automation robot.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Code First Docs How we Threw Out The Book &amp; Put Code First With Twilio Documentation by Jarod Reyes</title>
      <link>http://adron.github.io/articles/node-pdx-2016-speaker-jarod-reyes/</link>
      <pubDate>Wed, 01 Jun 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-speaker-jarod-reyes/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://nodepdx.org&quot;&gt;&lt;img src=&quot;/articles/node-pdx-2016-speaker-jarod-reyes/nodepdx-2016-logo.png&quot; alt=&quot;Node PDX 2016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;image float-left&quot;&gt;
    &lt;img src=&quot;/articles/node-pdx-2016-speaker-jarod-reyes/jarodreyes.jpg&quot; alt=&quot;Jarod Reyes&quot;&gt;
&lt;/div&gt;

&lt;p&gt;Jarod is alarmingly disinterested in “how things are done”. He spent much of his grade school years disrupting class, running social experiments and singing love ballads to his teachers. Nowadays he can be found working with an exceptional team of developers at Twilio who are laser-focused on improving the landscape of developer documentation.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Jarod describes Code First Docs as&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“My job at Twilio is straightforward, write documentation that doesn’t suck. This may seem fairly straightforward, but it turns out to be harder than an &lt;a href=&quot;https://c1.staticflickr.com/5/4048/4353601145_5c12467871_b.jpg&quot;&gt;Atari 2600 cartridge&lt;/a&gt;. For the last 30 years we have asked developers to do their jobs by equipping them with essentially giant books that we have adapted to the internet age by simply putting them on the web. At Twilio we weren’t satisfied with this traditional approach so we threw out the book and challenged some basic assumptions about creating documentation for developers.&lt;/p&gt;
&lt;p&gt;What is the journey of the modern developer? How does documentation fit into their flow? Are there ways to create documentation that enables developers to work smarter, as opposed to interrupting their day? We’ll discuss these questions and more as I share how we got to the realization that we needed a documentation revolution; this is the story of how we raised up code to be the supreme leader of documentation.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Twitter: &lt;a href=&quot;https://twitter.com/jreyesdev&quot;&gt;@jreyesdev&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Github: &lt;a href=&quot;https://github.com/jarodreyes&quot;&gt;github.com/jarodreyes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Ops for Devs by Adam Ulvi</title>
      <link>http://adron.github.io/articles/node-pdx-2016-speaker-adam-ulvi/</link>
      <pubDate>Tue, 31 May 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-speaker-adam-ulvi/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://nodepdx.org&quot;&gt;&lt;img src=&quot;/articles/node-pdx-2016-speaker-adam-ulvi/nodepdx-2016-logo.png&quot; alt=&quot;Node PDX 2016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Node applications exist at the end of a long, somewhat magical series of tubes. What spells are being cast to make this all work? Let’s find out!&lt;/p&gt;
&lt;p&gt;In this talk Adam will explore the steps required to host a Node application on a small, affordable linux virtual private server (like a DigitalOcean droplet). This is not a tutorial, but rather, a walk-through of the configuration steps, background information the role each step plays, and the “why” behind the choices we are making.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img class=&quot;image&quot; src=&quot;adamulvi.jpg&quot; style=&quot;float: right;margin-left: 15px;margin-top: 15px;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;The reference implementation is taken from the current production gruntjs.com server.&lt;/p&gt;
&lt;p&gt;By following the request lifecyle, we will touch on basic tcp/ip networking, DNS configuration and history, node application development, nginx proxy configuration, and basic linux system configuration.&lt;/p&gt;
&lt;p&gt;At the end of the presentation developers should have a better understanding of the simple application’s infrastructure requirements, external dependencies, and targets of opportunity for future improvement.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Github: &lt;a href=&quot;http://github.com/aulvi&quot;&gt;github.com/aulvi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IRC: s5fs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I’m looking forward to Adam’s talk, since I’ve been doing a lot of ops along with my dev work lately. Come check out Adam’s talk at &lt;a href=&quot;http://nodepdx.org/#tickets&quot; target=&quot;_blank&quot;&gt;Node PDX&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Speakers and More For Node PDX 2016</title>
      <link>http://adron.github.io/articles/speakers-and-more-for-node-pdx-2016/</link>
      <pubDate>Tue, 24 May 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/speakers-and-more-for-node-pdx-2016/</guid>
      <author></author>
      <description>&lt;p&gt;Spock and I are excited to announce our first set of speakers for &lt;a href=&quot;http://nodepdx.org/&quot; target=&quot;_blank&quot;&gt;Node PDX 2016&lt;/a&gt;, which you’ve seen slowly coming out each day! I hope you’re ready and have your &lt;a href=&quot;http://nodepdx.org/#tickets&quot; target=&quot;_blank&quot;&gt;tickets&lt;/a&gt; bought already. So far I’ve introduced &lt;a href=&quot;http://blog.adron.me/articles/node-pdx-2016-speaker-tomomi-imura/&quot;&gt;Tomomi&lt;/a&gt;, &lt;a href=&quot;http://blog.adron.me/articles/node-pdx-2016-speaker-jonny-oropeza/&quot;&gt;Jon&lt;/a&gt;, and &lt;a href=&quot;http://blog.adron.me/articles/node-pdx-2016-speaker-liz-abinante/&quot;&gt;Liz&lt;/a&gt;. Today I’ll introduce Adam Ulvi a bit later.&lt;/p&gt;
&lt;p&gt;We’ve also announced the &lt;a href=&quot;http://nodepdx.org/lagniappe.html#geektrain&quot; target=&quot;_blank&quot;&gt;Geek Train for Node PDX&lt;/a&gt; and the &lt;a href=&quot;http://nodepdx.org/lagniappe.html#bikes&quot; target=&quot;_blank&quot;&gt;Node PDX Bike Ride&lt;/a&gt;. A little &lt;a href=&quot;http://www.merriam-webster.com/dictionary/lagniappe&quot; target=&quot;_blank&quot;&gt;lagniappe&lt;/a&gt; if you will.  ;)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.adron.me/articles/node-pdx-2016-speaker-tomomi-imura/&quot;&gt;Tomomi&lt;/a&gt;, &lt;a href=&quot;http://blog.adron.me/articles/node-pdx-2016-speaker-jonny-oropeza/&quot;&gt;Jon&lt;/a&gt;, and &lt;a href=&quot;http://adron.github.io/articles/speakers-and-more-for-node-pdx-2016/&quot;&gt;Liz&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/articles/speakers-and-more-for-node-pdx-2016/spock-horns.jpg&quot; alt=&quot;Spock&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;http://nodepdx.org/&quot; target=&quot;_blank&quot;&gt;Node PDX 2016&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;Geek Train&lt;/strong&gt; provides super cheap $15 train fare from anywhere north of Portland along the Amtrak Cascades route. I’ll actually meet the train in Seattle and ride from Seattle back to Portland for the conference. How that works is if you’re in Bellingham, Everett, Seattle, Tacoma, or wherever along the northern stretch can &lt;a href=&quot;https://ti.to/nodepdx/nodepdx-2016/with/gl6purbdlmo&quot; target=&quot;_blank&quot;&gt;purchase a ticket from us here&lt;/a&gt;. Once you purchase a ticket we’ll all have tickets for a specific train and will board along the line and join up in a specific car on the train (which we’ll have assigned day of the trip).&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;bike ride&lt;/strong&gt; will make a loop through west and east of the Willamette River with a chance to check out all sorts of parts of the city. We’ll stop and try some of the wicked tasty locally roasted coffee and roll into one of the local taprooms that has dozens of local brews on tap. Between those tasty beverages I’ll point out some of the most excellent architecture, bridge design (ya like bridges eh?), neighborhoods, and other things that are characteristic of Portland. This will be a slow ride, so no need to have alley cat like reflexes and riding skills, just come and enjoy a chill, casual, and fun slow ride through Portland.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;http://dotnetfringe.org/&quot; target=&quot;_blank&quot;&gt;.NET Fringe 2016&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;For .NET Fringe we’ll have the announcements for speakers coming very soon. We’ve taken a slightly different approach with a voting mechanism among organizers which we’ll be wrapping up and then will hurry up with the announcement, I know everybody needs to know ASAP!&lt;/p&gt;
&lt;p&gt;We’ll also be setting up a Geek Train &amp;amp; .NET Fringe bike ride too, we’ve just got to get everything posted. So keep an eye on the .NET Fringe site or &lt;a href=&quot;http://dotnetfringe.org/#signup&quot; target=&quot;_blank&quot;&gt;subscribe to updates&lt;/a&gt; and it’ll have updates popping up real soon.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>A Foolish Quest Creating Knitting Patterns Using JavaScript by Liz Abinante</title>
      <link>http://adron.github.io/articles/node-pdx-2016-speaker-liz-abinante/</link>
      <pubDate>Mon, 23 May 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-speaker-liz-abinante/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://nodepdx.org&quot;&gt;&lt;img src=&quot;/articles/node-pdx-2016-speaker-liz-abinante/nodepdx-2016-logo.png&quot; alt=&quot;Node PDX 2016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://blog.adron.me/articles/node-pdx-2016-speaker-liz-abinante/knitting.png&quot; class=&quot;image float-left&quot; /&gt;Liz Abinante lives in Portland, Oregon and works as a Senior Software Engineer at &lt;a href=&quot;https://newrelic.com/&quot;&gt;New Relic&lt;/a&gt;. She is infectiously enthusiastic about web development, teaching, learning, and feminism. She used to write JavaScript, then walked up to the wrong desk one day and now she writes some Java too. She enjoys speaking at conferences, knitting, sewing, and a hacking away on interesting problems. She swears she’s a lot more interesting than this bio makes her sound. She’s often been compared to cartoon characters due to her enormous personality and penchant for singing and/or dancing her way through life.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;liz.jpg&quot; class=&quot;image float-right&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Liz’s presentation is &lt;strong&gt;&lt;em&gt;A Foolish Quest: Creating Knitting Patterns Using JavaScript&lt;/em&gt;&lt;/strong&gt;. The talk will show taking something real-world and math-based, like knitting, and turning into a program is actually super easy (no one is surprised here). But! What happens when you combine that with best practices and expected conventions, along with industry-wide standards for design and presentation? Things get a lot more complicated than just crunching numbers, especially when your output will result in lots of manual hours for people creating a real object. This is the story of how Liz built a customizable knitting pattern generator in JavaScript (after she’d built it in Ruby first, of course), and the lessons learned when you try and do math for more than just math’s sake.&lt;/p&gt;
&lt;p&gt;Join the Node PDX Conference by &lt;a href=&quot;http://nodepdx.org/#tickets&quot; target=&quot;_blank&quot;&gt;buying a ticket&lt;/a&gt; and come check out Liz’s presentation!&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Isomorphic Business Logic (Or How to convince even the most die-hard C#/Java/Rails-on-the-Backend boss that you need to run a node server) Jonny Oropeza</title>
      <link>http://adron.github.io/articles/node-pdx-2016-speaker-jonny-oropeza/</link>
      <pubDate>Wed, 18 May 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-speaker-jonny-oropeza/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://nodepdx.org&quot;&gt;&lt;img src=&quot;/articles/node-pdx-2016-speaker-jonny-oropeza/nodepdx-2016-logo.png&quot; alt=&quot;Node PDX 2016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;image float-right&quot;&gt;
    &lt;img src=&quot;/articles/node-pdx-2016-speaker-jonny-oropeza/jon.jpg&quot; alt=&quot;Jon Oropeza&quot;&gt;
&lt;/div&gt;

&lt;p&gt;Jon Oropeza is a full-stack engineer at HD Quote Center, a post-aquisition startup solving tricky ecommerce problems for their parent company, The Home Depot. Prior to that, he designed and developed software for the insurance industry with his partners at LifePro Financial Services, and also co-founded a deep learning / computer vision oriented startup called Tilt Video.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Jon will be presenting “&lt;strong&gt;Isomorphic Business Logic (Or How to convince even the most die-hard C#/Java/Rails-on-the-Backend boss that you need to run a node server)&lt;/strong&gt;“ which might just be the talk with the longest title of the conference!&lt;/p&gt;
&lt;p&gt;Business logic is all the tricky calculations, rules and transformations that never seem to be in the hot new framework’s example ToDo app. Lately I’ve been finding it’s also the key to convincing clients and bosses that they NEED to run a node layer, no matter what other backend techs they happen to be rocking. In this talk I’ll dive into why and how, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An intro to isomorphic javascript&lt;/li&gt;
&lt;li&gt;Challenges that arise from wanting a performant client and server-side verification&lt;/li&gt;
&lt;li&gt;How this gets exacerbated if you happen to be using a microservices-based backend&lt;/li&gt;
&lt;li&gt;Business logic - that pesky stuff that isn’t in the ToDo App&lt;/li&gt;
&lt;li&gt;Story time: A real world example of an app trying to apply the same logic in 2 different languages&lt;/li&gt;
&lt;li&gt;Isomorphic business logic to the rescue!&lt;/li&gt;
&lt;li&gt;The close… How all of this translates to ‘you need to run a node server’ :)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Come check out Jon’s talk at &lt;a href=&quot;http://nodepdx.org/#tickets&quot; target=&quot;_blank&quot;&gt;Node PDX&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>From Software to Hardware How Do I Track My Cat with JavaScript Tomomi Imura</title>
      <link>http://adron.github.io/articles/node-pdx-2016-speaker-tomomi-imura/</link>
      <pubDate>Tue, 17 May 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/node-pdx-2016-speaker-tomomi-imura/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;http://nodepdx.org&quot;&gt;&lt;img src=&quot;/articles/node-pdx-2016-speaker-tomomi-imura/nodepdx-2016-logo.png&quot; alt=&quot;Node PDX 2016&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I’m stoked to introduce Tomomi (&lt;a href=&quot;http://twitter.com/girlie_mac&quot;&gt;@girlie_mac&lt;/a&gt;). Tomomi is an avid open web &amp;amp; open technology advocate and creative technologist, who had been active in the mobile space for past 8+ years. Now she is working at PubNub in San Francisco. When she is not at work, she still geeks around and hacks some stuff like Amazon Dash to Rickroll people.&lt;/p&gt;
&lt;p&gt;Tomomi will be presenting “&lt;strong&gt;From Software to Hardware: How Do I Track My Cat with JavaScript&lt;/strong&gt;“.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;jamie-detected.png&quot; class=&quot;image float-right&quot; /&gt;&lt;/p&gt;
&lt;p&gt;In the era of Internet of Things, connecting things to the mobile devices and web is becoming ubiquitous. You can control room light using your mobile phone. You can monitor your heart rate and weight on browser. JavaScript engineers like you already have skills to prototype ideas to build software, so why not hardware too?&lt;/p&gt;
&lt;p&gt;Tomomi, a front-end engineer with no background in electrical engineering, tells how she got started with hardware hacking with JavaScript, also talks about her recent fun project, &lt;a href=&quot;https://github.com/girliemac/RPi-KittyCam&quot;&gt;KittyCam&lt;/a&gt;, a Raspberry Pi camera with cat facial detection to see when her cat Jamie is eating while being away from home.&lt;/p&gt;
&lt;p&gt;If you’re interested in seeing Tomomi speak, get registered for &lt;a href=&quot;http://nodepdx.org/&quot; target=&quot;_blank&quot;&gt;Node PDX before the tickets are gone&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Dropping the Ball, GSD, and Staying Productive</title>
      <link>http://adron.github.io/articles/dropping-the-ball-gsd-and-staying-productive/</link>
      <pubDate>Thu, 12 May 2016 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/dropping-the-ball-gsd-and-staying-productive/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;em&gt;[&lt;strong&gt;NOTE:&lt;/strong&gt; This was actually written Thursday the 5th, things make more sense with that in mind.]&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I sat here today, and several normal things happened that made me think of some seriously important things. The thoughts are presented very well by Scott Hanselman in a talk on &lt;em&gt;scaling oneself&lt;/em&gt;. He’s got a lot of gems in this presentation (links and video below), which he’s given a few times. In those presentations he makes a few very quotable statements that I had pop into my mind.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“It’s not what you read, it’s what you ignore.” - Scott Hanselman&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The other really great gem is,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Sometimes &lt;em&gt;&lt;strong&gt;dropping the ball&lt;/strong&gt;&lt;/em&gt; is the right thing to do.”  - Scott Hanselman&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Both of these are so true. It’s an important balancing act that one must perform to maintain a high level of productivity, especially in any complex work. Seriously, even digging a ditch can be complex, just look at Boston. They spent the years 1982 through 2002 to work on this project. They failed a dozen times on a dozen aspects of the project. It barely finished even a percentage of what was intended all for an initial estimate that was $2.8 Billion that ended up being $14.8 billion (only $8.08 Billion in 1982 dollars though :o ). In this situation, just to finish, the city had to actually drop the ball on a number of aspects of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Big_Dig&quot; target=&quot;_blank&quot;&gt;Big Dig&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But I digress, my problems I’m working on solutions for aren’t anywhere near the dilemma of the Big Dig. I do however find myself needing to chose between becoming swamped and living life, or dropping the ball. If I chose carefully I can still succeed even while dropping the ball on some things. Because sometimes it is indeed, the right thing to do.&lt;/p&gt;
&lt;p&gt;An alternative,&lt;strong&gt; delegate &lt;/strong&gt;and get help.&lt;/p&gt;
&lt;p&gt;Another solution to dropping the ball or not dropping the ball, is to simply delegate and pass the ball to others who can help out. Both &lt;em&gt;dropping the ball&lt;/em&gt; and &lt;em&gt;delegating&lt;/em&gt; are honestly great leadership skills that can be harnessed to effectively multiply your productivity levels. Both of them can seem almost like the same thing to those that have expectations upon your work, and both can be force multipliers for you, but their results can obviously be very different initially. In the end, both end up requiring someone to pick up the work or write off the work. I’ll leave you to guess which one results in which result. ;)&lt;/p&gt;
&lt;p&gt;As these things popped into my head I looked at my immediate to-do list of things. I knew I was rather bombarded with things I needed to do, so it was time to figure out what could be delegated and what could be dropped. This list, of course is only &lt;em&gt;tech related&lt;/em&gt; and &lt;em&gt;work&lt;/em&gt; related. It is also a list that has to be done before the end of the week, which is Sunday @ 6pm in time for Game of Thrones for this particular instance.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Infrastructure: DNS migration completion from provider X to Google Cloud DNS via Terraform &amp;amp; Atlas.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Resolve a firewall change.&lt;/li&gt;
&lt;li&gt;Determine Zookeeper working situation with Kubernetes &amp;amp; container tech vs. installed on VM. Prepare a seamless immutable infra deployment of said Zookeeper cluster.&lt;/li&gt;
&lt;li&gt;.NET Fringe - Setup voting for proposals and get team to vote.&lt;/li&gt;
&lt;li&gt;.NET Fringe - Get bike ride event posted for day before conference.&lt;/li&gt;
&lt;li&gt;.NET Fringe - Get schedule put together for workshops.&lt;/li&gt;
&lt;li&gt;.NET Fringe - Finalize curriculum, course topics, abstracts, and titles for workshops.&lt;/li&gt;
&lt;li&gt;.NET Fringe - Get Geek Train setup, scheduled, call Amtrak to confirm date and get a ticket block.&lt;/li&gt;
&lt;li&gt;.NET Fringe - Get marketing done around Geek Train, Bike Ride, Workshops, etc.&lt;/li&gt;
&lt;li&gt;.NET Fringe - Update website w/ progress.&lt;/li&gt;
&lt;li&gt;Node PDX - Get bike ride event posted for day before conference.&lt;/li&gt;
&lt;li&gt;Node PDX - Get schedule put together for workshops.&lt;/li&gt;
&lt;li&gt;Node PDX - Meet with Code Fellows about partnership and workshop resources (space etc)&lt;/li&gt;
&lt;li&gt;Node PDX - Get proposals sorted and prepared for selection and make selection w/ team.&lt;/li&gt;
&lt;li&gt;Node PDX - Get Geek Train setup, scheduled, call Amtrak to confirm date and get a ticket block.&lt;/li&gt;
&lt;li&gt;PDX Node - (Not PDX Node and not Node PDX!) meetup tonight (Thursday) at Urban Airship to plan the future of the meetup and coordinate with organizers!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ok, that’s enough. You get the idea. I’m a bit underwater on things. But this is how it works. There are weeks where there isn’t a high priority on a single thing, and then BOOM, the deluge has come upon me and I have no hope of finishing things in a timely manner. Privatization, delegation, and dropping the ball are the options available during this time.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Question Things, Question Yourself, Always Ask Questions&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I always ask several questions about things I need to get done during this time. For instance, how could I get help or even get someone to organize a bike ride or do the work of setting up logistics around the geek train? How could I make the amount of work I need to do to setup the DNS migration and complete it the absolute minimum while ensuring it’ll get done right, on time, and seamlessly without interruption? Could I just drop the Zookeeper and Kubernetes work for now? There is always a balance to be reached among things that provides the maximum return.&lt;/p&gt;
&lt;p&gt;Among all the questions there are two other things that are super important. Again, I’m going to pull a Hanselman quote.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Effectiveness is doing the right thing.
Efficiency is doing things right.  - &lt;em&gt;Scott Hanselman&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;These two things are huge. If either falters, even in a small way, I’ve found it’s better to call a full stop and reflect on what I’m doing. I’ve also found, that when others start to give in and their efficiency and effectiveness drops, it’s time to call a full stop. This is something that’s hugely helpful when providing leadership for people too, help them help you help everybody move forward and don’t let them fall prey to be overworked and overwhelmed!&lt;/p&gt;
&lt;p&gt;These are a few things, largely focused around Scott’s blog entries and presentations. Absolutely great, well researched, and he practices what he preaches. Scott is a seriously kick ass, highly reliable, consistent guy.&lt;/p&gt;
&lt;p&gt;On to some other things that Scott might have said, but these are things I’ve come up with just from life. The following might actually seem counter-intuitive, but I promise you when these practices are mastered you will stand out strong while others falter around you. However they’re tricky, because if you have a “warm body in seat” type of boss, don’t have work flexibility around hours, schedule, remote or onsite all of these become extremely difficult. In spite of this they’re all wroth investing in to get them to work for you. I’ve easily quadrupled what I can do by doing the following.&lt;/p&gt;
&lt;p&gt;&lt;h1&gt;My Productivity List&lt;/h1&gt;
Remember one thing. Work is not your core focus and reason to exist in life. &lt;strong&gt;&lt;em&gt;You, your family, your love is why you work in order to live and to create and build&lt;/em&gt;&lt;/strong&gt;. Don’t get these things mixed up ever. If work takes to much toll, figure something out to reduce it’s damage to your life.&lt;/p&gt;
&lt;h2 id=&quot;coffee-without-work&quot;&gt;Coffee Without Work&lt;/h2&gt;
&lt;p&gt;Have your &lt;em&gt;&lt;strong&gt;coffee without work in the morning&lt;/strong&gt;&lt;/em&gt;. I can’t rave enough about getting one’s head in the game before actually starting on work tasks. Whatever your morning tradition is, mine being that wicked awesome coffee that Portland is famous for, this needs to be done without having work interfere. If someone is emailing you or calling you don’t let it interrupt. If you feel you need to be interrupted in the morning then you really need to find different work where this time will be respected.&lt;/p&gt;
&lt;p&gt;You might have another coffee with coffee folk at work, but whatever the case, have your first coffee in your own head space without interruptions. Better yet, have it with your wife, children, or loved ones so you remember why you are who you are and do what you do.&lt;/p&gt;
&lt;h2 id=&quot;cut-the-to-do-list-in-half&quot;&gt;Cut The To-do List in Half&lt;/h2&gt;
&lt;p&gt;Ever noticed the lies of to-do lists? It takes practice to create to-do lists that are actually able to be completed on a schedule. Don’t even lie about it, that’s what all of our first to-do lists do, is lie to us. There are tons of rules and thoughts around to-do lists. Keep em’ to three isn’t a bad one, but as you’ve seen I have a catastrophe in the making listed above. So I need to split that to-do list into manageable segments.&lt;/p&gt;
&lt;p&gt;The times to-do lists turn into a multidimensional array of to-do lists are to frequent to count. So cut them in half, stay focused on one list. ONE LIST, not anymore. If you have more delete them. They’re waste, total waste. I keep a single list and &lt;em&gt;notes&lt;/em&gt;. The notes are merely random thoughts and things that might one day end up one day on a list. That leads me to the next thing…&lt;/p&gt;
&lt;h2 id=&quot;write-note-and-think&quot;&gt;Write, Note, and Think&lt;/h2&gt;
&lt;p&gt;Write down things, not particularly lists, but just things that you think or ponder frequently. This helps one formalize what their thoughts are. Write these notes and think, think, and think some more. For me, this helps me refocus and insure I’m always working (or actively procrastinating at least) effectively and efficiently on things instead of getting hit with analysis paralysis or other such anti-pattern problems.&lt;/p&gt;
&lt;h2 id=&quot;take-a-break&quot;&gt;Take a Break&lt;/h2&gt;
&lt;p&gt;Take a break frequently. Taking a break frequently and move around. Walk around a space, the block, or whatever you can find. Walk for at least 15 minutes every 2-4 hours. I’m sure doctors say this too, but I’ve got this on my list of productivity helpers because it legitimately helps people keep that brain clear and helps in numerous other ways. This activity will also help knock out thinking road blocks, resolve errors that crop up, and generally keep you quick thinking. Otherwise we humans tend to fade at a dramatically faster rate during the day without a break, in spite of what we sometimes think we need to do. So take a break, walk around.&lt;/p&gt;
&lt;h2 id=&quot;be-active-stay-healthy-blagh-blagh-blagh-&quot;&gt;Be Active, Stay Healthy… Blagh Blagh Blagh…&lt;/h2&gt;
&lt;p&gt;I’m touchy about this one and I know a bunch of people are. But this is seriously pivotal to staying productive! There are more studies than I can count and might hit on the topic in a subsequent blog entry. For now, it’s safe to say I stay active and it is massive part of how I stay productive.&lt;/p&gt;
&lt;h2 id=&quot;don-t-work-hard-work-smart&quot;&gt;Don’t Work Hard, Work Smart&lt;/h2&gt;
&lt;p&gt;This is said by half the planet, but seriously take it to heart. If you’re working hard, then you’re likely getting behind. If you find yourself repeatedly doing some copy and pasting, or just cranking through typing line after line of some nonsense, or you’ve been delved into a problem for many hours, step back. Are you just working hard at the problem or actually trying to work smartly to resolve the problem? Far to often we work at the problem instead of trying to actually think our way through the problem or even around the problem!&lt;/p&gt;
&lt;p&gt;Another article I saw popup recently, which translates to the idea behind don’t work hard, work smart is &lt;a href=&quot;http://www.inc.com/will-yakowicz/stop-being-busy-and-start-being-productive.html&quot; target=&quot;_blank&quot;&gt;stop being busy, start being productive&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;don-t-meeting-&quot;&gt;Don’t &lt;em&gt;Meeting&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;Does this need repeated? There’s a reason there are other options on meeting invites besides the &lt;em&gt;accept&lt;/em&gt; option. Use them readily, frequently, and with intent. Remove yourself from, and don’t let yourself fall into the trap of creating meetings that are unnecessary. &lt;a href=&quot;https://gettingreal.37signals.com/ch07_Meetings_Are_Toxic.php&quot; target=&quot;_blank&quot;&gt;Meetings are toxic&lt;/a&gt;, and seriously one of the biggest problems of going to &lt;em&gt;work&lt;/em&gt; is that far to often work doesn’t happen at work. Largely because of, as Jason Fried states, “&lt;em&gt;M &amp;amp; M&lt;/em&gt;“.&lt;/p&gt;
&lt;iframe width=&quot;1280&quot; height=&quot;720&quot; src=&quot;https://www.youtube.com/embed/5XD2kNopsUs?rel=0&amp;amp;showinfo=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;For the last few, these are just a few things to NOT do. If you find yourself stuck in these anti-patterns of productivity start looking for a way out. These anti-patterns are basically indicators of a death march. You aren’t going to fix it, let it die.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;em&gt;&lt;strong&gt;requested&lt;/strong&gt;&lt;/em&gt; overtime happens more than once a month. I’d even say, if overtime requests happens more than once a year, get out. This is a sure indicator of being underfunded, understaffed, poorly managed, and a lack of project leadership that understand how to achieve the best results  for a project, product, service, or otherwise. The only time overtime is acceptable is if &lt;em&gt;&lt;strong&gt;YOU&lt;/strong&gt;&lt;/em&gt; choose for &lt;em&gt;&lt;strong&gt;YOU&lt;/strong&gt;&lt;/em&gt; or &lt;em&gt;&lt;strong&gt;YOUR COMPANY&lt;/strong&gt;&lt;/em&gt; to work overtime. In the same turn, don’t request of others this nonsensical thing, it’s a sure sign you’ve lost control of dictating your company’s future effectively.&lt;/li&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Do not lose sleep&lt;/strong&gt;&lt;/em&gt;. Unless it’s because you’re super excited, that happens sometimes. But if you do lose sleep, make absolutely sure that you regain it somehow. If you lose sleep to often you will absolutely, 100% land in a seriously flawed and troublesome failing state. This is not a good situation to be in.&lt;/li&gt;&lt;/li&gt;
&lt;li&gt;This next one might sound odd, but I do nto jest even lightly about this one. &lt;em&gt;&lt;strong&gt;Drink more water&lt;/strong&gt;&lt;/em&gt; than you do now. Statistically Americans are somewhere around 96-97% chronically dehydrated. That means we’re almost always operating under less than ideal personal physical condition. This is very bad… if you don’t buy this one, go read up on how dehydration works. Then think about it, I promise it’s far more important than you might thing and it’s ridiculously easy to actually fix. This isn’t the 10th century anymore, nobody is really walking down to the river for water, just grab a bottle and carry it on your person.&lt;/li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;A few more related references:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;First and foremost, check out Scott’s &lt;a href=&quot;http://www.hanselman.com/blog/ScottHanselmansCompleteListOfProductivityTips.aspx&quot; target=&quot;_blank&quot;&gt;list of tips&lt;/a&gt;.&lt;/li&gt;&lt;/li&gt;
&lt;li&gt;Here’s one Scaling Yourself from 2012 @ Dev Day&lt;/li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe width=&quot;1280&quot; height=&quot;720&quot; src=&quot;https://www.youtube.com/embed/IWPgUn8tL8s?rel=0&amp;amp;showinfo=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;ul&gt;
&lt;li&gt;Also Scaling Yourself at goto; conf.&lt;/li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe width=&quot;1280&quot; height=&quot;720&quot; src=&quot;https://www.youtube.com/embed/FS1mnISoG7U?rel=0&amp;amp;showinfo=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
</description>
    </item>
    <item>
      <title>Docker Tips n' Tricks - Bash Things With Docker</title>
      <link>http://adron.github.io/articles/docker-tips-n-tricks-bash-things-with-docker/</link>
      <pubDate>Wed, 09 Mar 2016 16:00:00 -0800</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/docker-tips-n-tricks-bash-things-with-docker/</guid>
      <author></author>
      <description>&lt;p&gt;If you use Docker frequently, you’ve likely memorized a few repetitive commands…&lt;/p&gt;
&lt;div class=&quot;code-highlight &quot; &gt;
&lt;span class=&quot;js-copy-to-clipboard copy-code&quot;&gt;copy&lt;/span&gt; 
&lt;pre&gt;
&lt;code class=&quot;language-markup js-code&quot;&gt;
docker-machine start XyZvirtualMachine&lt;/code&gt;
&lt;/pre&gt; 
&lt;/div&gt;

&lt;p&gt;Then you run…&lt;/p&gt;
&lt;div class=&quot;code-highlight &quot; &gt;
&lt;span class=&quot;js-copy-to-clipboard copy-code&quot;&gt;copy&lt;/span&gt; 
&lt;pre&gt;
&lt;code class=&quot;language-markup js-code&quot;&gt;
docker-machine env XyZvirtualMachine&lt;/code&gt;
&lt;/pre&gt; 
&lt;/div&gt;

&lt;p&gt;…and then you type…&lt;/p&gt;
&lt;div class=&quot;code-highlight &quot; &gt;
&lt;span class=&quot;js-copy-to-clipboard copy-code&quot;&gt;copy&lt;/span&gt; 
&lt;pre&gt;
&lt;code class=&quot;language-markup js-code&quot;&gt;
eval $(docker-machine env XyZvirtualMachine)&lt;/code&gt;
&lt;/pre&gt; 
&lt;/div&gt;

&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;One does this about a zillion times if there are multiple virtual machines or for other various reasons. I wanted to simplify this repetitive task so I wrote a bash function, thanks to a &lt;a href=&quot;http://stackoverflow.com/questions/35761480/scripting-docker-not-connected-after-running-script&quot; target=&quot;_blank&quot;&gt;fumble I posted on Stackoverflow&lt;/a&gt; and then an assist by my good friend Troy Howard (&lt;a href=&quot;https://twitter.com/thoward37&quot; target=&quot;_blank&quot;&gt;@thoward37&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;This quick hack consisted of this &lt;a href=&quot;https://gist.github.com/Adron/8dc06eb398f403225daa&quot; target=&quot;_blank&quot;&gt;Github gist&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;code-highlight &quot; &gt;
&lt;span class=&quot;js-copy-to-clipboard copy-code&quot;&gt;copy&lt;/span&gt; 
&lt;pre&gt;
&lt;code class=&quot;language-markup js-code&quot;&gt;
gimmedocker() { if [ $1 ]; then
    docker-machine start $1
    docker-machine env $1
    eval $(docker-machine env $1)
    docker ps -a
fi }&lt;/code&gt;
&lt;/pre&gt; 
&lt;/div&gt;

&lt;p&gt;Stick that in your ~/.bash_profile (or ~/.bashrc if you’re on *nix) and you’re good to go. Then at the bash prompt just type in this.&lt;/p&gt;
&lt;div class=&quot;code-highlight &quot; &gt;
&lt;span class=&quot;js-copy-to-clipboard copy-code&quot;&gt;copy&lt;/span&gt; 
&lt;pre&gt;
&lt;code class=&quot;language-markup js-code&quot;&gt;
gimmedocker XyZvirtualMachine&lt;/code&gt;
&lt;/pre&gt; 
&lt;/div&gt;

&lt;p&gt;BOOM! Less typing for the win!&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Docker Tips n' Tricks - Delete All The Images &amp; Containers</title>
      <link>http://adron.github.io/articles/docker-tips-n-tricks-delete-all-the-images-containers/</link>
      <pubDate>Sun, 01 Nov 2015 16:00:00 -0800</pubDate>
      <guid isPermaLink="true">http://adron.github.io/articles/docker-tips-n-tricks-delete-all-the-images-containers/</guid>
      <author></author>
      <description>&lt;p&gt;Two simple commands that’ll wipe your installation clean of images and containers.&lt;/p&gt;
&lt;p&gt;Deletes all containers&lt;/p&gt;
&lt;div class=&quot;code-highlight&quot;&gt;
&lt;span class=&quot;js-copy-to-clipboard copy-code&quot;&gt;copy&lt;/span&gt; 
&lt;pre&gt;
&lt;code class=&quot;language-markup js-code&quot;&gt;
docker rm $(docker ps -a -q)&lt;/code&gt;
&lt;/pre&gt; 
&lt;/div&gt;

&lt;p&gt;Deletes all images&lt;/p&gt;
&lt;div class=&quot;code-highlight&quot;&gt;
&lt;span class=&quot;js-copy-to-clipboard copy-code&quot;&gt;copy&lt;/span&gt; 
&lt;pre&gt;
&lt;code class=&quot;language-markup js-code&quot;&gt;
docker rmi $(docker images -q)&lt;/code&gt;
&lt;/pre&gt; 
&lt;/div&gt;</description>
    </item>
  </channel>
</rss>